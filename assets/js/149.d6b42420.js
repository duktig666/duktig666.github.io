(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{577:function(a,s,t){"use strict";t.r(s);var n=t(3),r=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("作者：duktig")]),a._v(" "),s("p",[a._v("博客："),s("a",{attrs:{href:"https://duktig.cn",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://duktig.cn"),s("OutboundLink")],1),a._v("  （文章首发）")]),a._v(" "),s("p",[a._v("优秀还努力。愿你付出甘之如饴，所得归于欢喜。")]),a._v(" "),s("p",[a._v("本篇文章源码参看："),s("a",{attrs:{href:"https://github.com/duktig666/big-data",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/duktig666/big-data"),s("OutboundLink")],1)])]),a._v(" "),s("h1",{attrs:{id:"yarn-资源调度器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-资源调度器"}},[a._v("#")]),a._v(" Yarn 资源调度器")]),a._v(" "),s("h2",{attrs:{id:"yarn-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-概述"}},[a._v("#")]),a._v(" Yarn 概述")]),a._v(" "),s("p",[a._v("思考：")]),a._v(" "),s("ol",[s("li",[a._v("如何管理集群资源？")]),a._v(" "),s("li",[a._v("如何给任务合理分配资源？")])]),a._v(" "),s("p",[s("strong",[a._v("Yarn")]),a._v("是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的"),s("strong",[a._v("操作系统平台")]),a._v("，而 "),s("strong",[a._v("MapReduce")]),a._v(" 等运算程序则相当于"),s("strong",[a._v("运行于操作系统之上的应用程序")]),a._v("。")]),a._v(" "),s("h2",{attrs:{id:"yarn-基础架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-基础架构"}},[a._v("#")]),a._v(" Yarn 基础架构")]),a._v(" "),s("p",[a._v("YARN主要由ResourceManager、NodeManager、ApplicationMaster和Container等组件构成。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091704417.png",alt:"Yarn 基础架构"}})]),a._v(" "),s("h2",{attrs:{id:"yarn工作机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn工作机制"}},[a._v("#")]),a._v(" Yarn工作机制")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091707853.png",alt:"Yarn 工作机制"}})]),a._v(" "),s("p",[a._v("详细流程：")]),a._v(" "),s("p",[a._v("（1）MapReduce 程序提交到客户端所在的节点。")]),a._v(" "),s("p",[a._v("（2）YarnRunner向ResourceManager申请一个Application。")]),a._v(" "),s("p",[a._v("（3）RM将该应用程序的资源路径返回给YarnRunner。")]),a._v(" "),s("p",[a._v("（4）该程序将运行所需资源提交到HDFS上。")]),a._v(" "),s("p",[a._v("（5）程序资源提交完毕后，申请运行mrAppMaster。")]),a._v(" "),s("p",[a._v("（6）RM将用户的请求初始化成一个Task。")]),a._v(" "),s("p",[a._v("（7）其中一个NodeManager领取到Task任务。")]),a._v(" "),s("p",[a._v("（8）该NodeManager创建容器Container，并产生MRAppmaster。")]),a._v(" "),s("p",[a._v("（9）Container从HDFS上拷贝资源到本地。")]),a._v(" "),s("p",[a._v("（10）MRAppmaster向RM 申请运行MapTask资源。")]),a._v(" "),s("p",[a._v("（11）RM将运行MapTask任务分配给另外两个NodeManager，另两个NodeManager分别领取任务并创建容器。")]),a._v(" "),s("p",[a._v("（12）MR向两个接收到任务的NodeManager发送程序启动脚本，这两个NodeManager分别启动MapTask，MapTask对数据分区排序。")]),a._v(" "),s("p",[a._v("（13）MrAppMaster等待所有MapTask运行完毕后，向RM申请容器，运行ReduceTask。")]),a._v(" "),s("p",[a._v("（14）ReduceTask向MapTask获取相应分区的数据。")]),a._v(" "),s("p",[a._v("（15）程序运行完毕后，MR会向RM申请注销自己。")]),a._v(" "),s("h2",{attrs:{id:"作业提交全过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业提交全过程"}},[a._v("#")]),a._v(" 作业提交全过程")]),a._v(" "),s("h3",{attrs:{id:"hdfs、yarn、mapreduce三者关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hdfs、yarn、mapreduce三者关系"}},[a._v("#")]),a._v(" HDFS、YARN、MapReduce三者关系")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091711699.png",alt:"HDFS、YARN、MapReduce三者关系"}})]),a._v(" "),s("h3",{attrs:{id:"作业提交过程之yarn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业提交过程之yarn"}},[a._v("#")]),a._v(" 作业提交过程之YARN")]),a._v(" "),s("p",[a._v("参看上文："),s("a",{attrs:{href:"#Yarn%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6"}},[a._v("Yarn工作机制")])]),a._v(" "),s("h3",{attrs:{id:"作业提交过程之hdfs-mapreduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业提交过程之hdfs-mapreduce"}},[a._v("#")]),a._v(" 作业提交过程之HDFS & MapReduce")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091713573.png",alt:"作业提交过程之HDFS & MapReduce"}})]),a._v(" "),s("h3",{attrs:{id:"作业提交全过程详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业提交全过程详解"}},[a._v("#")]),a._v(" 作业提交全过程详解")]),a._v(" "),s("p",[a._v("（1）作业提交")]),a._v(" "),s("p",[a._v("第1步：Client调用job.waitForCompletion方法，向整个集群提交MapReduce作业。")]),a._v(" "),s("p",[a._v("第2步：Client向RM申请一个作业id。")]),a._v(" "),s("p",[a._v("第3步：RM给Client返回该job资源的提交路径和作业id。")]),a._v(" "),s("p",[a._v("第4步：Client提交jar包、切片信息和配置文件到指定的资源提交路径。")]),a._v(" "),s("p",[a._v("第5步：Client提交完资源后，向RM申请运行MrAppMaster。")]),a._v(" "),s("p",[a._v("（2）作业初始化")]),a._v(" "),s("p",[a._v("第6步：当RM收到Client的请求后，将该job添加到容量调度器中。")]),a._v(" "),s("p",[a._v("第7步：某一个空闲的NM领取到该Job。")]),a._v(" "),s("p",[a._v("第8步：该NM创建Container，并产生MRAppmaster。")]),a._v(" "),s("p",[a._v("第9步：下载Client提交的资源到本地。")]),a._v(" "),s("p",[a._v("（3）任务分配")]),a._v(" "),s("p",[a._v("第10步：MrAppMaster向RM申请运行多个MapTask任务资源。")]),a._v(" "),s("p",[a._v("第11步：RM将运行MapTask任务分配给另外两个NodeManager，另两个NodeManager分别领取任务并创建容器。")]),a._v(" "),s("p",[a._v("（4）任务运行")]),a._v(" "),s("p",[a._v("第12步：MR向两个接收到任务的NodeManager发送程序启动脚本，这两个NodeManager分别启动MapTask，MapTask对数据分区排序。")]),a._v(" "),s("p",[a._v("第13步：MrAppMaster等待所有MapTask运行完毕后，向RM申请容器，运行ReduceTask。")]),a._v(" "),s("p",[a._v("第14步：ReduceTask向MapTask获取相应分区的数据。")]),a._v(" "),s("p",[a._v("第15步：程序运行完毕后，MR会向RM申请注销自己。")]),a._v(" "),s("p",[a._v("（5）进度和状态更新")]),a._v(" "),s("p",[a._v("YARN中的任务将其进度和状态(包括counter)返回给应用管理器, 客户端每秒(通过mapreduce.client.progressmonitor.pollinterval设置)向应用管理器请求进度更新, 展示给用户。")]),a._v(" "),s("p",[a._v("（6）作业完成")]),a._v(" "),s("p",[a._v("除了向应用管理器请求作业进度外, 客户端每5秒都会通过调用waitForCompletion()来检查作业是否完成。时间间隔可以通过mapreduce.client.completion.pollinterval来设置。作业完成之后, 应用管理器和Container会清理工作状态。作业的信息会被作业历史服务器存储以备之后用户核查。")]),a._v(" "),s("h2",{attrs:{id:"yarn调度器和调度算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn调度器和调度算法"}},[a._v("#")]),a._v(" Yarn调度器和调度算法")]),a._v(" "),s("p",[a._v("目前，Hadoop作业调度器主要有三种：FIFO、容量（Capacity Scheduler）和公平（Fair Scheduler）。")]),a._v(" "),s("ul",[s("li",[a._v("Apache Hadoop3.1.3默认的资源调度器是Capacity Scheduler。")]),a._v(" "),s("li",[a._v("CDH框架默认调度器是Fair Scheduler。")])]),a._v(" "),s("p",[a._v("具体设置详见：yarn-default.xml文件")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("The class to use as the resource scheduler."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("yarn.resourcemanager.scheduler.class"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h3",{attrs:{id:"先进先出调度器-fifo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先进先出调度器-fifo"}},[a._v("#")]),a._v(" 先进先出调度器（FIFO）")]),a._v(" "),s("p",[a._v("FIFO调度器（First In First Out）：单队列，根据提交作业的先后顺序，先来先服务。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091716045.png",alt:"FIFO调度器"}})]),a._v(" "),s("p",[a._v("优点：简单易懂；")]),a._v(" "),s("p",[a._v("缺点：不支持多队列，生产环境很少使用；")]),a._v(" "),s("h3",{attrs:{id:"容量调度器-capacity-scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容量调度器-capacity-scheduler"}},[a._v("#")]),a._v(" 容量调度器（Capacity Scheduler）")]),a._v(" "),s("p",[a._v("Capacity Scheduler是 Yahoo 开发的多用户调度器。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091719091.png",alt:"容量调度器（Capacity Scheduler）"}})]),a._v(" "),s("p",[a._v("特点：")]),a._v(" "),s("p",[a._v("1、"),s("strong",[a._v("多队列")]),a._v("：每个队列可配置一定的资源量，"),s("strong",[a._v("每个队列采用FIFO调度策略")]),a._v("。")]),a._v(" "),s("p",[a._v("2、容量保证：管理员可为每个队列设置资源最低保证和资源使用上限")]),a._v(" "),s("p",[a._v("3、灵活性：如果一个队列中的资源有剩余，可以暂时共享给那些需要资源的队列，而一旦该队列有新的应用程序提交，则其他队列借调的资源会归还给该队列。")]),a._v(" "),s("p",[a._v("4、多租户：")]),a._v(" "),s("ul",[s("li",[a._v("支持多用户共享集群和多应用程序同时运行。")]),a._v(" "),s("li",[a._v("为了防止同一个用户的作业独占队列中的资源，该调度器会对同一用户提交的作业所占资源量进行限定。")])]),a._v(" "),s("p",[s("strong",[a._v("容量调度器资源分配算法")]),a._v("：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091722827.png",alt:"容量调度器资源分配算法"}})]),a._v(" "),s("h3",{attrs:{id:"公平调度器-fair-scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平调度器-fair-scheduler"}},[a._v("#")]),a._v(" 公平调度器（Fair Scheduler）")]),a._v(" "),s("h4",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[a._v("#")]),a._v(" 特点")]),a._v(" "),s("p",[a._v("Fair Schedulere是Facebook开发的多用户调度器。")]),a._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5Crsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211009172355581.png",alt:"image-20211009172355581"}})]),a._v(" "),s("p",[a._v("1）与容量调度器相同点")]),a._v(" "),s("p",[a._v("（1）多队列：支持多队列多作业")]),a._v(" "),s("p",[a._v("（2）容量保证：管理员可为每个队列设置资源最低保证和资源使用上线")]),a._v(" "),s("p",[a._v("（3）灵活性：如果一个队列中的资源有剩余，可以暂时共享给那些需要资源的队列，而一旦该队列有新的应用程序提交，则其他队列借调的资源会归还给该队列。")]),a._v(" "),s("p",[a._v("（4）多租户：支持多用户共享集群和多应用程序同时运行；为了防止同一个用户的作业独占队列中的资源，该调度器会对同一用户提交的作业所占资源量进行限定。")]),a._v(" "),s("p",[a._v("2）与容量调度器不同点")]),a._v(" "),s("p",[a._v("（1）核心调度策略不同")]),a._v(" "),s("p",[a._v("容量调度器：优先选择资源利用率低的队列")]),a._v(" "),s("p",[a._v("公平调度器：优先选择对资源的缺额比例大的")]),a._v(" "),s("p",[a._v("（2）每个队列可以单独设置资源分配方式")]),a._v(" "),s("p",[a._v("容量调度器：FIFO、DRF")]),a._v(" "),s("p",[a._v("公平调度器：FIFO、FAIR、DRF")]),a._v(" "),s("h4",{attrs:{id:"公平调度器-缺额"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平调度器-缺额"}},[a._v("#")]),a._v(" 公平调度器——缺额")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091726367.png",alt:"公平调度器——缺额"}})]),a._v(" "),s("p",[a._v("公平调度器设计目标是：在时间尺度上，所有作业获得公平的资源。")]),a._v(" "),s("ul",[s("li",[a._v("某一时刻一个作业应获资源和实际获取资源的差距叫“缺额”")]),a._v(" "),s("li",[a._v("调度器会优先为缺额大的作业分配资源。")])]),a._v(" "),s("h4",{attrs:{id:"公平调度器队列资源分配方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平调度器队列资源分配方式"}},[a._v("#")]),a._v(" 公平调度器队列资源分配方式")]),a._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5Crsw%5CPictures%5C%E5%85%AC%E5%B9%B3%E8%B0%83%E5%BA%A6%E5%99%A8%E9%98%9F%E5%88%97%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E6%96%B9%E5%BC%8F.png",alt:"公平调度器队列资源分配方式"}})]),a._v(" "),s("p",[s("strong",[a._v("公平调度器资源分配算法")])]),a._v(" "),s("p",[s("strong",[a._v("分配额度")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("root\n|---queueA 20%\n|---queueB 50%\n|---queueC 30%\n\t|---ss   50%\n\t|---cls 50%\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("strong",[a._v("（1）队列资源分配")])]),a._v(" "),s("p",[a._v("需求：集群总资源100，有三个队列，对资源的需求分别是：")]),a._v(" "),s("p",[a._v("queueA -> 20，queueB ->50，queueC -> 30")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("第一次算：100 / 3 = 33.33\nqueueA：分33.33 → 多13.33\nqueueB：分33.33 → 少16.67\nqueueC：分33.33 → 多3.33\n第二次算：（13.33 + 3.33）/ 1 = 16.66\nqueueA：分20\nqueueB：分33.33 + 16.66 = 50\nqueueC：分30\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091730650.png",alt:"队列资源分配"}})]),a._v(" "),s("p",[s("strong",[a._v("（2）作业资源分配")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110091731149.png",alt:"作业资源分配"}})]),a._v(" "),s("p",[s("strong",[a._v("3）DRF策略")])]),a._v(" "),s("p",[a._v("DRF（Dominant Resource Fairness），我们之前说的资源，都是单一标准，例如只考虑内存（也是Yarn默认的情况）。但是很多时候我们资源有很多种，例如内存，CPU，网络带宽等，这样我们很难衡量两个应用应该分配的资源比例。")]),a._v(" "),s("p",[a._v("那么在YARN中，我们用DRF来决定如何调度：")]),a._v(" "),s("p",[a._v("假设集群一共有100 CPU和10T 内存，而应用A需要（2 CPU, 300GB），应用B需要（6 CPU，100GB）。则两个应用分别需要A（2%CPU, 3%内存）和B（6%CPU, 1%内存）的资源，这就意味着A是内存主导的, B是CPU主导的，针对这种情况，我们可以选择DRF策略对不同应用进行不同资源（CPU和内存）的一个不同比例的限制。")]),a._v(" "),s("h3",{attrs:{id:"yarn的调度器总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn的调度器总结"}},[a._v("#")]),a._v(" Yarn的调度器总结")]),a._v(" "),s("ol",[s("li",[a._v("调度器：FIFO/容量/公平")]),a._v(" "),s("li",[a._v("apache 默认调度器  容量； CDH默认调度器 公平")]),a._v(" "),s("li",[a._v("公平/容量调度器，默认一个default队列 ，需要创建多队列")]),a._v(" "),s("li",[a._v("多队列选择（创建）\n"),s("ol",[s("li",[a._v("中小企业：hive  spark flink  mr")]),a._v(" "),s("li",[a._v("中大企业：业务模块：登录/注册/购物车/营销")])])]),a._v(" "),s("li",[a._v("队列好处：解耦  降低风险  11.11  6.18  降级使用=")]),a._v(" "),s("li",[a._v("每个调度器特点：\n"),s("ol",[s("li",[a._v("相同点：支持多队列，可以借资源，支持多用户")]),a._v(" "),s("li",[a._v("不同点：\n"),s("ol",[s("li",[a._v("容量调度器：优先满足先进来的任务执行")]),a._v(" "),s("li",[a._v("公平调度器，在队列里面的任务公平享有队列资源")])])])])]),a._v(" "),s("li",[a._v("生产环境怎么选调度器：\n"),s("ol",[s("li",[a._v("中小企业，对并发度要求不高，选择容量")]),a._v(" "),s("li",[a._v("中大企业，对并发度要求比较高，选择公平。")])])])]),a._v(" "),s("h2",{attrs:{id:"yarn-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-常用命令"}},[a._v("#")]),a._v(" Yarn 常用命令")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看任务 yarn application")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 列出所有 Application")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" application "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-list")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 根据 Application 状态过滤：yarn application -list -appStates （所有状态：ALL、NEW、NEW_SAVING、SUBMITTED、ACCEPTED、RUNNING、FINISHED、FAILED、KILLED） ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" application "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-list")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-appStates")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("appStates"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Kill 掉 Application")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" application "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-kill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("application_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看日志 yarn logs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 查询 Application 日志")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-applicationId")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ApplicationId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 查询 Container 日志")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-applicationId")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ApplicationId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-containerId")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ContainerId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看尝试运行的任务 yarn applicationattempt")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 列出所有 Application 尝试的列表")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" applicationattempt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-list")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ApplicationId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 打印 ApplicationAttemp 状态")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" applicationattempt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-status")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ApplicationAttemptId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器 yarn container")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 列出所有 Container")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" container "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-list")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ApplicationAttemptId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 打印 Container 状态")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" container "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-status")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ContainerId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看节点状态  yarn node")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 列出所有节点")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-list")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-all")]),a._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新配置 yarn rmadmin ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 加载队列配置")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" rmadmin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-refreshQueues")]),a._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看队列 yarn queue ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 打印队列信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" queue "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-status")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("QueueName"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);