(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{586:function(a,v,_){"use strict";_.r(v);var t=_(3),r=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"大数据基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据基础"}},[a._v("#")]),a._v(" 大数据基础")]),a._v(" "),v("h2",{attrs:{id:"大数据概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据概念"}},[a._v("#")]),a._v(" 大数据概念")]),a._v(" "),v("blockquote",[v("p",[a._v("大数据（Big Data）：指"),v("strong",[a._v("无法在一定时间范围内")]),a._v("用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的"),v("strong",[a._v("海量、高增长率和多样化")]),a._v("的"),v("strong",[a._v("信息资产")]),a._v("。")])]),a._v(" "),v("p",[a._v("按顺序给出数据存储单位：bit、Byte、KB、MB、GB、"),v("strong",[a._v("TB、PB、EB")]),a._v("、ZB、YB、BB、NB、DB。")]),a._v(" "),v("p",[a._v("大数据主要解决，"),v("strong",[a._v("海量数据的采集、存储和分析计算问题")]),a._v("。")]),a._v(" "),v("h2",{attrs:{id:"大数据特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据特点"}},[a._v("#")]),a._v(" 大数据特点")]),a._v(" "),v("p",[a._v("1、Volume（大量）")]),a._v(" "),v("p",[a._v("截至目前，人类生产的所有印刷材料的数据量是200PB，而历史上全人类总共说过的话的数据量大约是5EB。当前，典型个人计算机硬盘的容量为TB量级，而"),v("strong",[a._v("一些大企业的数据量已经接近EB量级")]),a._v("。")]),a._v(" "),v("p",[a._v("2、Velocity（高速）")]),a._v(" "),v("p",[a._v("这是大数据区分于传统数据挖掘的最显著特征。根据IDC的“数字宇宙”的报告，预计到2025年，全球数据使用量将达到163ZB。在如此海量的数据面前，处理数据的效率就是企业的生命。")]),a._v(" "),v("p",[a._v("天猫双十一：2017年3分01秒，天猫交易额超过100亿\n2020年96秒，天猫交易额超过100亿")]),a._v(" "),v("p",[a._v("3、Variety（多样）")]),a._v(" "),v("p",[a._v("类型的多样性也让数据被分为结构化数据和非结构化数据。相对于以往便于存储的"),v("strong",[a._v("以数据库/文本为主的结构化数据")]),a._v("，"),v("strong",[a._v("非结构化")]),a._v("数据越来越多，包括"),v("strong",[a._v("网络日志、音频、视频、图片、地理位置信息")]),a._v("等，这些多类型的数据对数据的处理能力提出了更高要求。")]),a._v(" "),v("p",[a._v("4、Value（低价值密度）")]),a._v(" "),v("p",[v("strong",[a._v("价值密度的高低与数据总量的大小成反比。如何快速对有价值数据“提纯”成为目前大数据背景下待解决的难题。")])]),a._v(" "),v("p",[a._v("总结：")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("大数据量的存储")])]),a._v(" "),v("li",[v("strong",[a._v("高效的数据处理")])]),a._v(" "),v("li",[v("strong",[a._v("多样类型的数据")])]),a._v(" "),v("li",[v("strong",[a._v("快速提取有价值的信息")])])]),a._v(" "),v("h2",{attrs:{id:"大数据的应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据的应用场景"}},[a._v("#")]),a._v(" 大数据的应用场景")]),a._v(" "),v("p",[a._v("1、抖音：推荐的都是你喜欢的视频")]),a._v(" "),v("p",[a._v("2、电商站内广告推荐：给用户推荐可能喜欢的商品")]),a._v(" "),v("p",[a._v("3、零售：分析用户消费习惯，为用户购买商品提供方便，从而提升商品销量。用户常买的，有关联的商品放在一起（外国经典案例，纸尿布+啤酒）")]),a._v(" "),v("p",[a._v("4、物流仓储：京东物流，上午下单下午送达、下午下单次日上午送达。不同地区的仓库结合当地特点存储相应的物资")]),a._v(" "),v("p",[a._v("5、保险：海量数据挖掘及风险预测，助力保险行业精准营销，提升精细化定价能力。")]),a._v(" "),v("p",[a._v("6、金融：多维度体现用户特征，帮助金融机构推荐优质客户，防范欺诈风险。")]),a._v(" "),v("p",[a._v("7、房产：大数据全面助力房地产行业，打造精准投策与营销，选出更合适的地，建造更合适的楼，卖给更合适的人。")]),a._v(" "),v("p",[a._v("8、人工智能+ 5G + 物联网+ 虚拟与现实")]),a._v(" "),v("h2",{attrs:{id:"大数据业务流程分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据业务流程分析"}},[a._v("#")]),a._v(" 大数据业务流程分析")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110061411924.png",alt:"大数据业务流程分析"}})]),a._v(" "),v("p",[v("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110061413554.png",alt:"大数据部门内组织结构"}})]),a._v(" "),v("h2",{attrs:{id:"大数据技术生态体系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据技术生态体系"}},[a._v("#")]),a._v(" 大数据技术生态体系")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110061414647.png",alt:"大数据技术生态体系 "}})]),a._v(" "),v("p",[a._v("1）Sqoop：Sqoop 是一款开源的工具，主要用于在 "),v("strong",[a._v("Hadoop、Hive 与传统的数据库（MySQL）间进行数据的传递")]),a._v("，可以将一个关系型数据库（例如 ：MySQL，Oracle 等）中的数据导进到 Hadoop 的 HDFS 中，也可以将 HDFS 的数据导进到关系型数据库中。")]),a._v(" "),v("p",[a._v("2）Flume：Flume 是一个高可用的，高可靠的，分布式的"),v("strong",[a._v("海量日志采集、聚合和传输的系统")]),a._v("，Flume 支持在日志系统中定制各类数据发送方，用于收集数据；")]),a._v(" "),v("p",[a._v("3）Kafka：Kafka 是一种高吞吐量的分布式发布订阅消息系统；")]),a._v(" "),v("p",[a._v("4）Spark：Spark 是当前最流行的开源大数据内存计算框架。可以基于 Hadoop 上存储的大数据进行计算。")]),a._v(" "),v("p",[a._v("5）Flink：Flink 是当前最流行的开源大数据内存计算框架。用于"),v("strong",[a._v("实时计算")]),a._v("的场景较多。")]),a._v(" "),v("p",[a._v("6）Oozie：Oozie 是一个管理 Hadoop 作业（job）的工作流程调度管理系统。")]),a._v(" "),v("p",[a._v("7）Hbase：HBase 是一个"),v("strong",[a._v("分布式的、面向列")]),a._v("的开源数据库。HBase 不同于一般的关系数据库，它是一个适合于"),v("strong",[a._v("非结构化数据存储的数据库")]),a._v("。")]),a._v(" "),v("p",[a._v("8）Hive：Hive 是基于 Hadoop 的一个"),v("strong",[a._v("数据仓库工具")]),a._v("，可以将结构化的数据文件映射为一张数据库表，并提供简单的 SQL 查询功能，可以将 SQL 语句转换为 MapReduce 任务进行运行。其优点是学习成本低，可以通过类 SQL 语句快速实现简单的 MapReduce 统计，不必开发专门的MapReduce 应用，十分适合数据仓库的统计分析。")]),a._v(" "),v("p",[a._v("9）ZooKeeper：它是一个针对大型分布式系统的"),v("strong",[a._v("可靠协调系统")]),a._v("，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。")]),a._v(" "),v("h2",{attrs:{id:"推荐系统项目框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#推荐系统项目框架"}},[a._v("#")]),a._v(" 推荐系统项目框架")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110242223328.png",alt:"image-20211024222223590"}})]),a._v(" "),v("h1",{attrs:{id:"大数据技术梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据技术梳理"}},[a._v("#")]),a._v(" 大数据技术梳理")]),a._v(" "),v("h2",{attrs:{id:"hadoop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[a._v("#")]),a._v(" Hadoop")]),a._v(" "),v("h3",{attrs:{id:"hdfs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hdfs"}},[a._v("#")]),a._v(" HDFS")]),a._v(" "),v("h4",{attrs:{id:"什么是hdfs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是hdfs"}},[a._v("#")]),a._v(" 什么是HDFS？")]),a._v(" "),v("p",[a._v("Hadoop Distributed File System，简称 "),v("strong",[a._v("HDFS")]),a._v("，是一个"),v("strong",[a._v("分布式文件系统")]),a._v("。 用于存储文件，通过目录树来定位文件；其次，它是分布式的，由很多服务器联合起来实现其功能，集群中的服务器有各自的角色。")]),a._v(" "),v("blockquote",[v("p",[v("strong",[a._v("分布式文件系统产生的背景")])]),a._v(" "),v("p",[a._v("随着数据量越来越大，在一个操作系统存不下所有的数据，那么就分配到更多的操作系统管理的磁盘中，但是不方便管理和维护，迫切"),v("strong",[a._v("需要一种系统来管理多台机器上的文件")]),a._v("，这就是分布式文件管理系统。")])]),a._v(" "),v("h4",{attrs:{id:"hdfs的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hdfs的使用场景"}},[a._v("#")]),a._v(" HDFS的使用场景")]),a._v(" "),v("p",[v("strong",[a._v("适合一次写入，多次读出的场景")]),a._v("。一个文件经过创建、写入和关闭之后就不需要改变。")]),a._v(" "),v("h4",{attrs:{id:"hdfs的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hdfs的优缺点"}},[a._v("#")]),a._v(" HDFS的优缺点")]),a._v(" "),v("h5",{attrs:{id:"优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[a._v("#")]),a._v(" 优点")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("高容错性")]),a._v(" "),v("ul",[v("li",[a._v("数据自动保存多个副本。它通过增加副本的形式，提高容错性。")]),a._v(" "),v("li",[a._v("某一个副本丢失以后，它可以自动恢复。")])])]),a._v(" "),v("li",[v("strong",[a._v("适合处理大数据")]),a._v(" "),v("ul",[v("li",[a._v("数据规模：能够处理数据规模达到GB、TB、甚至"),v("strong",[a._v("PB级别的数据")]),a._v("；")]),a._v(" "),v("li",[a._v("文件规模：能够处理百万规模以上的文件数量，数量相当之大。")])])]),a._v(" "),v("li",[a._v("可"),v("strong",[a._v("构建在廉价机器上")]),a._v("，通过多副本机制，提高可靠性。")])]),a._v(" "),v("h5",{attrs:{id:"缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[a._v("#")]),a._v(" 缺点")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("不适合低延时数据访问")]),a._v("，比如毫秒级的存储数据，是做不到的。")]),a._v(" "),v("li",[v("strong",[a._v("无法高效的对大量小文件进行存储")]),a._v(" "),v("ul",[v("li",[a._v("存储大量小文件的话，它会占用NameNode大量的内存来存储文件目录和块信息。这样是不可取的，因为NameNode的内存总是有限的；")]),a._v(" "),v("li",[a._v("小文件存储的寻址时间会超过读取时间，它违反了HDFS的设计目标。")])])]),a._v(" "),v("li",[v("strong",[a._v("不支持并发写入、文件随机修改")]),a._v(" "),v("ul",[v("li",[a._v("一个文件只能有一个写，不允许多个线程同时写")]),a._v(" "),v("li",[a._v("仅支持数据append（追加），不支持文件的随机修改")])])])]),a._v(" "),v("h3",{attrs:{id:"mapreduce"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mapreduce"}},[a._v("#")]),a._v(" MapReduce")]),a._v(" "),v("h4",{attrs:{id:"什么是mapreduce"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是mapreduce"}},[a._v("#")]),a._v(" 什么是MapReduce？")]),a._v(" "),v("p",[a._v("MapReduce 是一个"),v("strong",[a._v("分布式运算程序")]),a._v("的编程框架，是用户开发“基于 Hadoop 的数据分析应用”的核心框架。")]),a._v(" "),v("p",[a._v("MapReduce 核心功能是 "),v("strong",[a._v("将用户编写的业务逻辑代码和自带默认组件整合成一个完整的分布式运算程序，并发运行在一个 Hadoop 集群上")]),a._v(" 。")]),a._v(" "),v("h4",{attrs:{id:"mapreduce-的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mapreduce-的使用场景"}},[a._v("#")]),a._v(" MapReduce 的使用场景")]),a._v(" "),v("p",[a._v("核心思想："),v("strong",[a._v("如何把大问题分解成独立的小问题，再并行解决")]),a._v("。")]),a._v(" "),v("p",[a._v("典型场景：")]),a._v(" "),v("p",[v("strong",[a._v("计算"),v("code",[a._v("URL")]),a._v("的访问频率")]),a._v("：搜索引擎的使用中，会遇到大量的"),v("code",[a._v("URL")]),a._v("的访问，所以，可以使用 "),v("code",[a._v("MapReduce")]),a._v(" 来进行统计，得出（"),v("code",[a._v("URL")]),a._v(",次数）结果，在后续的分析中可以使用。")]),a._v(" "),v("p",[v("strong",[a._v("Top K 问题")]),a._v("：在各种的文档分析，或者是不同的场景中，经常会遇到关于 "),v("code",[a._v("Top K")]),a._v(" 的问题，例如输出这篇文章的出现前"),v("code",[a._v("5")]),a._v("个最多的词汇。这个时候也可以使用 "),v("code",[a._v("MapReduce")]),a._v("来进行统计。")]),a._v(" "),v("h4",{attrs:{id:"mapreduce优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mapreduce优缺点"}},[a._v("#")]),a._v(" MapReduce优缺点")]),a._v(" "),v("h5",{attrs:{id:"优点-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[a._v("#")]),a._v(" 优点")]),a._v(" "),v("p",[a._v("1、"),v("strong",[a._v("易于编程")]),a._v("： 用户只关心业务逻辑。 实现框架的接口。\n2、"),v("strong",[a._v("良好扩展性")]),a._v("：可以动态增加服务器，解决计算资源不够问题。\n3、"),v("strong",[a._v("高容错性")]),a._v("：任何一台机器挂掉，可以将任务转移到其他节点。\n4、"),v("strong",[a._v("适合海量数据计算")]),a._v("：（TB/PB） 几千台服务器共同计算。")]),a._v(" "),v("h5",{attrs:{id:"缺点-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[a._v("#")]),a._v(" 缺点")]),a._v(" "),v("p",[a._v("1、"),v("strong",[a._v("不擅长实时计算。 Mysql")]),a._v("（在毫秒或者秒级内返回结果）\n2、**不擅长流式计算。 Spark Streaming | flink 。**流式计算的输入数据是动态的，而 MapReduce 的输入数据集是静态的，不能动态变化。\n3、"),v("strong",[a._v("不擅长DAG有向无环图计算。spark 。")]),a._v(" 多个应用程序存在依赖关系，后一个应用程序的输入为前一个的输出。在这种情况下，MapReduce 并不是不能做，而是使用后，每个 MapReduce 作业的输出结果都会写入到磁盘，会造成大量的磁盘 IO，导致性能非常的低下。")]),a._v(" "),v("h3",{attrs:{id:"yarn"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[a._v("#")]),a._v(" Yarn")]),a._v(" "),v("h4",{attrs:{id:"什么是yarn"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是yarn"}},[a._v("#")]),a._v(" 什么是Yarn？")]),a._v(" "),v("p",[v("strong",[a._v("Yarn")]),a._v("是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的"),v("strong",[a._v("操作系统平台")]),a._v("，而 "),v("strong",[a._v("MapReduce")]),a._v(" 等运算程序则相当于"),v("strong",[a._v("运行于操作系统之上的应用程序")]),a._v("。")]),a._v(" "),v("h4",{attrs:{id:"yarn主要解决的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#yarn主要解决的问题"}},[a._v("#")]),a._v(" Yarn主要解决的问题")]),a._v(" "),v("ul",[v("li",[a._v("如何管理集群资源？")]),a._v(" "),v("li",[a._v("如何给任务合理分配资源？")])]),a._v(" "),v("h2",{attrs:{id:"hive"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hive"}},[a._v("#")]),a._v(" Hive")]),a._v(" "),v("h3",{attrs:{id:"什么是-hive"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-hive"}},[a._v("#")]),a._v(" 什么是 Hive ？")]),a._v(" "),v("h4",{attrs:{id:"hive简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hive简介"}},[a._v("#")]),a._v(" Hive简介")]),a._v(" "),v("p",[a._v("Hive：由Facebook 开源用于解决 "),v("strong",[a._v("海量结构化日志的数据统计")]),a._v(" 的工具。")]),a._v(" "),v("p",[a._v("Hive 是基于 Hadoop 的一个 "),v("strong",[a._v("数据仓库工具")]),a._v("，可以 "),v("strong",[a._v("将结构化的数据文件映射为一张表，并提供类 SQL 查询功能")]),a._v("。")]),a._v(" "),v("h4",{attrs:{id:"hive本质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hive本质"}},[a._v("#")]),a._v(" Hive本质")]),a._v(" "),v("p",[v("strong",[a._v("将 HQL 转化成MapReduce 程序")]),a._v(" 。主要如下：")]),a._v(" "),v("ul",[v("li",[a._v("Hive 处理的数据存储在 HDFS")]),a._v(" "),v("li",[a._v("Hive 分析数据底层的实现是 MapReduce")]),a._v(" "),v("li",[a._v("执行程序运行在 Yarn 上")])]),a._v(" "),v("h3",{attrs:{id:"hive-的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hive-的优缺点"}},[a._v("#")]),a._v(" Hive 的优缺点")]),a._v(" "),v("h4",{attrs:{id:"优点-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优点-3"}},[a._v("#")]),a._v(" 优点")]),a._v(" "),v("ul",[v("li",[a._v("操作接口采用 "),v("strong",[a._v("类 SQL 语法")]),a._v("，提供快速开发的能力（简单、容易上手）。")]),a._v(" "),v("li",[v("strong",[a._v("避免了去写 MapReduce")]),a._v("，减少开发人员的学习成本。")]),a._v(" "),v("li",[a._v("Hive可以处理大数据量。")]),a._v(" "),v("li",[a._v("Hive 支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。")])]),a._v(" "),v("h4",{attrs:{id:"缺点-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缺点-3"}},[a._v("#")]),a._v(" 缺点")]),a._v(" "),v("ul",[v("li",[a._v("Hive 的 HQL 表达能力有限\n"),v("ul",[v("li",[a._v("迭代式算法无法表达")]),a._v(" "),v("li",[a._v("数据挖掘方面不擅长，由于 MapReduce 数据处理流程的限制，效率更高的算法却无法实现。")])])]),a._v(" "),v("li",[a._v("Hive 的效率比较低\n"),v("ul",[v("li",[a._v("Hive 自动生成的 MapReduce 作业，通常情况下不够智能化")]),a._v(" "),v("li",[a._v("Hive 调优比较困难，粒度较粗")])])]),a._v(" "),v("li",[a._v("Hive的执行延迟比较高。")])]),a._v(" "),v("h3",{attrs:{id:"hive-的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hive-的使用场景"}},[a._v("#")]),a._v(" Hive 的使用场景")]),a._v(" "),v("p",[a._v("因为Hive 的执行延迟比较高，所以")]),a._v(" "),v("ol",[v("li",[a._v("Hive 常用于数据分析，对实时性要求不高的场合。")]),a._v(" "),v("li",[a._v("Hive 优势在于处理大数据，对于处理小数据没有优势。")])]),a._v(" "),v("h2",{attrs:{id:"hbase"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hbase"}},[a._v("#")]),a._v(" HBase")]),a._v(" "),v("h3",{attrs:{id:"什么是-hbase"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-hbase"}},[a._v("#")]),a._v(" 什么是 Hbase？")]),a._v(" "),v("p",[a._v("HBase是一种分布式、可扩展、支持海量数据存储的 "),v("strong",[a._v("NoSQL数据库")]),a._v("。")]),a._v(" "),v("p",[a._v("HBase是依赖Hadoop的。为什么HBase能存储海量的数据？"),v("strong",[a._v("因为HBase是在HDFS的基础之上构建的，HDFS是分布式文件系统")]),a._v("。")]),a._v(" "),v("p",[a._v("HBase在HDFS之上提供了"),v("strong",[a._v("高并发的随机写和支持实时查询")]),a._v("，这是HDFS不具备的。")]),a._v(" "),v("h3",{attrs:{id:"hbase的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hbase的优缺点"}},[a._v("#")]),a._v(" HBase的优缺点")]),a._v(" "),v("p",[a._v("优点：")]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("低成本")]),a._v("来"),v("strong",[a._v("存储海量")]),a._v("的数据并且支持高并发随机写和实时查询")]),a._v(" "),v("li",[a._v("基于「列式存储」，"),v("strong",[a._v("存储数据的”结构“可以地非常灵活")])])]),a._v(" "),v("p",[a._v("参看：")]),a._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/145551967",target:"_blank",rel:"noopener noreferrer"}},[a._v("我终于看懂了HBase，太不容易了..."),v("OutboundLink")],1)]),a._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/u011598442/article/details/89891926",target:"_blank",rel:"noopener noreferrer"}},[a._v("一文读懂 HBase 使用场景"),v("OutboundLink")],1)])]),a._v(" "),v("h2",{attrs:{id:"sqoop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sqoop"}},[a._v("#")]),a._v(" Sqoop")]),a._v(" "),v("h3",{attrs:{id:"什么是sqoop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是sqoop"}},[a._v("#")]),a._v(" 什么是Sqoop？")]),a._v(" "),v("p",[a._v("Sqoop 是一款开源的工具，主要用于在 "),v("strong",[a._v("Hadoop(Hive)与传统的数据库(mysql、postgresql...) 间进行数据的传递")]),a._v("，可以将一个关系型数据库（例如 ： MySQL ,Oracle ,Postgres 等）中的数据导进到 Hadoop 的 HDFS 中，也可以将 HDFS 的数据导进到关系型数据库中。")]),a._v(" "),v("h3",{attrs:{id:"sqoop原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sqoop原理"}},[a._v("#")]),a._v(" Sqoop原理")]),a._v(" "),v("p",[a._v("将导入或导出命令翻译成 mapreduce 程序来实现，在翻译出的 mapreduce 中主要是对 "),v("code",[a._v("inputformat")]),a._v(" 和 "),v("code",[a._v("outputformat")]),a._v(" 进行定制。")]),a._v(" "),v("h2",{attrs:{id:"flume"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flume"}},[a._v("#")]),a._v(" Flume")]),a._v(" "),v("h3",{attrs:{id:"什么是flume"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是flume"}},[a._v("#")]),a._v(" 什么是Flume？")]),a._v(" "),v("p",[a._v("Flume 是Cloudera 提供的一个高可用的，高可靠的，"),v("strong",[a._v("分布式的海量日志采集、聚合和传输的系统")]),a._v("。Flume 基于流式架构，灵活简单。")]),a._v(" "),v("p",[a._v("Flume最主要的作用就是，"),v("strong",[a._v("实时读取服务器本地磁盘的数据，将数据写入到HDFS")]),a._v("。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202110251052295.png",alt:"Flume作用"}})]),a._v(" "),v("h2",{attrs:{id:"spark"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[a._v("#")]),a._v(" Spark")]),a._v(" "),v("h3",{attrs:{id:"什么是spark"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是spark"}},[a._v("#")]),a._v(" 什么是Spark？")]),a._v(" "),v("p",[a._v("Spark 是一种由Scala 语言开发，基于内存的快速、通用、可扩展的大数据分析计算引擎。")]),a._v(" "),v("h3",{attrs:{id:"spark和hadoop的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark和hadoop的关系"}},[a._v("#")]),a._v(" Spark和Hadoop的关系")]),a._v(" "),v("p",[a._v("Spark 和Hadoop 的根本差异是多个作业之间的数据通信问题 : Spark 多个作业之间数据通信是基于内存，而 Hadoop 是基于磁盘。")]),a._v(" "),v("h3",{attrs:{id:"spark的核心模块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark的核心模块"}},[a._v("#")]),a._v(" Spark的核心模块")]),a._v(" "),v("h4",{attrs:{id:"spark-core"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-core"}},[a._v("#")]),a._v(" Spark Core")]),a._v(" "),v("p",[a._v("Spark Core 中提供了 Spark 最基础与最核心的功能，Spark 其他的功能如：Spark SQL，Spark Streaming，GraphX, MLlib 都是在Spark Core 的基础上进行扩展的")]),a._v(" "),v("h4",{attrs:{id:"spark-sql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-sql"}},[a._v("#")]),a._v(" Spark SQL")]),a._v(" "),v("p",[a._v("Spark SQL 是Spark 用来操作结构化数据的组件。通过Spark SQL，用户可以使用 SQL或者Apache Hive 版本的 SQL 方言（HQL）来查询数据。")]),a._v(" "),v("h4",{attrs:{id:"spark-streaming"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-streaming"}},[a._v("#")]),a._v(" Spark Streaming")]),a._v(" "),v("p",[a._v("Spark Streaming 是 Spark 平台上针对实时数据进行流式计算的组件，提供了丰富的处理数据流的API。")]),a._v(" "),v("h4",{attrs:{id:"spark-mllib"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-mllib"}},[a._v("#")]),a._v(" Spark MLlib")]),a._v(" "),v("p",[a._v("MLlib 是 Spark 提供的一个机器学习算法库。MLlib 不仅提供了模型评估、数据导入等额外的功能，还提供了一些更底层的机器学习原语。")]),a._v(" "),v("h4",{attrs:{id:"spark-graphx"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-graphx"}},[a._v("#")]),a._v(" Spark GraphX")]),a._v(" "),v("p",[a._v("GraphX 是Spark 面向图计算提供的框架与算法库。")]),a._v(" "),v("p",[a._v("参看：")]),a._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/caoweixiong/p/13426876.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Spark——需要HADOOP来运行SPARK吗？"),v("OutboundLink")],1)])]),a._v(" "),v("h2",{attrs:{id:"flink"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flink"}},[a._v("#")]),a._v(" Flink")]),a._v(" "),v("h3",{attrs:{id:"什么是flink"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是flink"}},[a._v("#")]),a._v(" 什么是Flink？")]),a._v(" "),v("p",[a._v("Apache Flink 是一个"),v("strong",[a._v("框架")]),a._v("和"),v("strong",[a._v("分布式处理引擎")]),a._v("，用于"),v("strong",[a._v("对无界和有界数据流进行状态计算")]),a._v("。")]),a._v(" "),v("h3",{attrs:{id:"为什么选择-flink"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择-flink"}},[a._v("#")]),a._v(" 为什么选择 Flink？")]),a._v(" "),v("p",[a._v("流数据更真实地反映了我们的生活方式")]),a._v(" "),v("p",[a._v("传统的数据架构是基于有限数据集的")]),a._v(" "),v("p",[a._v("优点：")]),a._v(" "),v("ul",[v("li",[a._v("低延迟")]),a._v(" "),v("li",[a._v("高吞吐")]),a._v(" "),v("li",[a._v("结果的准确性和良好的容错性")])]),a._v(" "),v("h3",{attrs:{id:"流数据使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流数据使用场景"}},[a._v("#")]),a._v(" 流数据使用场景")]),a._v(" "),v("p",[a._v("电商和市场营销：数据报表、广告投放、业务流程需要")]),a._v(" "),v("p",[a._v("物联网（IOT）：传感器实时数据采集和显示、实时报警，交通运输业")]),a._v(" "),v("p",[a._v("电信业：基站流量调配")]),a._v(" "),v("p",[a._v("银行和金融业：实时结算和通知推送，实时检测异常行为")]),a._v(" "),v("h3",{attrs:{id:"flink-的主要特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flink-的主要特点"}},[a._v("#")]),a._v(" Flink 的主要特点")]),a._v(" "),v("ol",[v("li",[a._v("事件驱动（Event-driven）")]),a._v(" "),v("li",[a._v("基于流的世界观\n"),v("ol",[v("li",[a._v("在 Flink 的世界观中，一切都是由流组成的，离线数据是有界的流；")]),a._v(" "),v("li",[a._v("实时数据是一个没有界限的流：这就是所谓的有界流和无界流")])])]),a._v(" "),v("li",[a._v("分层API\n"),v("ol",[v("li",[a._v("越顶层越抽象，表达含义越简明，使用越方便")]),a._v(" "),v("li",[a._v("越底层越具体，表达能力越丰富，使用越灵活")])])])]),a._v(" "),v("p",[a._v("其他特点：")]),a._v(" "),v("ol",[v("li",[a._v("支持事件时间（event-time）和处理时间（processing-time）语义")]),a._v(" "),v("li",[a._v("精确一次（exactly-once）的状态一致性保证")]),a._v(" "),v("li",[a._v("低延迟，每秒处理数百万个事件，毫秒级延迟")]),a._v(" "),v("li",[a._v("与众多常用存储系统的连接")]),a._v(" "),v("li",[a._v("高可用，动态扩展，实现7*24小时全天候运行")])]),a._v(" "),v("h3",{attrs:{id:"flink-vs-spark-streaming"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flink-vs-spark-streaming"}},[a._v("#")]),a._v(" Flink vs Spark Streaming")]),a._v(" "),v("p",[v("strong",[a._v("数据模型")])]),a._v(" "),v("ul",[v("li",[a._v("spark 采用 RDD 模型，spark streaming 的 DStream 实际上也就是一组 组小批数据 RDD 的集合")]),a._v(" "),v("li",[a._v("flink 基本数据模型是数据流，以及事件（Event）序列")])]),a._v(" "),v("p",[v("strong",[a._v("运行时架构")])]),a._v(" "),v("ul",[v("li",[a._v("spark 是批计算，将 DAG 划分为不同的 stage，一个完成后才可以计算下一个")]),a._v(" "),v("li",[a._v("flink 是标准的流执行模式，一个事件在一个节点处理完后可以直接发往下一个节点进行处理")])]),a._v(" "),v("h2",{attrs:{id:"mahout-过时淘汰"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mahout-过时淘汰"}},[a._v("#")]),a._v(" Mahout（过时淘汰）")]),a._v(" "),v("h3",{attrs:{id:"mahout是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mahout是什么"}},[a._v("#")]),a._v(" Mahout是什么？")]),a._v(" "),v("p",[a._v("Mahout是一个"),v("strong",[a._v("算法库")]),a._v("，提供一些可扩展的"),v("strong",[a._v("机器学习领域经典算法的实现")]),a._v("，旨在帮助开发人员更加方便快捷地创建智能应用程序。")]),a._v(" "),v("p",[a._v("Mahout包含许多实现，包括聚类、分类、推荐过滤、频繁子项挖掘。")]),a._v(" "),v("p",[a._v("可以被 Spark Mlib替换")]),a._v(" "),v("p",[v("a",{attrs:{href:"https://www.cnblogs.com/ahu-lichang/p/7073836.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Mahout介绍和简单应用"),v("OutboundLink")],1)]),a._v(" "),v("h2",{attrs:{id:"impala"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#impala"}},[a._v("#")]),a._v(" Impala")]),a._v(" "),v("h3",{attrs:{id:"什么是impala"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是impala"}},[a._v("#")]),a._v(" 什么是Impala？")]),a._v(" "),v("p",[a._v("Impala是Cloudera由C++编写的基于MPP（massively parallel processing）理念的查询引擎，由运行在CDH集群上的不同的守护进程组成，它跟Hive的metastore集成，共用database和tables等信息。")]),a._v(" "),v("h3",{attrs:{id:"优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[a._v("#")]),a._v(" "),v("strong",[a._v("优势")])]),a._v(" "),v("ul",[v("li",[a._v("impala跟现有的CDH组件自动集成，数据可以被CDH中的各种组件共用")]),a._v(" "),v("li",[a._v("支持sql查询hbase、hdfs、kudu等。")]),a._v(" "),v("li",[a._v("impala只需要几秒钟或者分钟级别就能返回数据")]),a._v(" "),v("li",[a._v("支持parquet、text、rcfile、hfile等文件格式")])]),a._v(" "),v("h2",{attrs:{id:"kudu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kudu"}},[a._v("#")]),a._v(" KUDU")]),a._v(" "),v("h3",{attrs:{id:"什么是kudu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是kudu"}},[a._v("#")]),a._v(" 什么是Kudu？")]),a._v(" "),v("p",[a._v("KUDU 的定位是 「Fast Analytics on Fast Data」，是一个既支持随机读写、又支持 OLAP 分析的大数据存储引擎。")]),a._v(" "),v("p",[a._v("KUDU 是一个「折中」的产品，在 HDFS 和 HBase 这两个偏科生中平衡了随机读写和批量分析的性能。")]),a._v(" "),v("h3",{attrs:{id:"为什么要使用kudu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用kudu"}},[a._v("#")]),a._v(" 为什么要使用Kudu？")]),a._v(" "),v("p",[a._v("在 KUDU 之前，大数据主要以两种方式存储：")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("静态数据")]),a._v("：以 HDFS 引擎作为存储引擎，适用于高吞吐量的离线大数据分析场景。这类存储的局限性是数据无法进行随机的读写。")]),a._v(" "),v("li",[v("strong",[a._v("动态数据")]),a._v("：以 HBase、Cassandra 作为存储引擎，适用于大数据随机读写场景。这类存储的局限性是批量读取吞吐量远不如 HDFS，不适用于批量数据分析的场景。")])]),a._v(" "),v("p",[a._v("从上面分析可知，这两种数据在存储方式上完全不同，进而导致使用场景完全不同，但在真实的场景中，边界可能没有那么清晰，面对既需要随机读写，又需要批量分析的大数据场景，该如何选择呢？")]),a._v(" "),v("p",[v("a",{attrs:{href:"https://www.jianshu.com/p/93c602b637a4",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU 介绍"),v("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=r.exports}}]);