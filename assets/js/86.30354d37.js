(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{513:function(s,t,a){"use strict";a.r(t);var e=a(3),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[s._v("#")]),s._v(" 线程池")]),s._v(" "),t("h2",{attrs:{id:"_1-为什么使用线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么使用线程池"}},[s._v("#")]),s._v(" 1. 为什么使用线程池？")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("池化技术相比大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。")])])]),s._v(" "),t("p",[t("strong",[s._v("线程池")]),s._v("提供了一种限制和管理资源（包括执行一个任务）。 每个"),t("strong",[s._v("线程池")]),s._v("还维护一些基本统计信息，例如已完成任务的数量。")]),s._v(" "),t("p",[s._v("《Java 并发编程的艺术》提到的"),t("strong",[s._v("使用线程池的好处")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("降低资源消耗")]),s._v("。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。")]),s._v(" "),t("li",[t("strong",[s._v("提高响应速度")]),s._v("。当任务到达时，任务可以不需要的等到线程创建就能立即执行。")]),s._v(" "),t("li",[t("strong",[s._v("提高线程的可管理性")]),s._v("。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。")])]),s._v(" "),t("h2",{attrs:{id:"_2-如何创建线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何创建线程池"}},[s._v("#")]),s._v(" 2. 如何创建线程池？")]),s._v(" "),t("p",[s._v("《阿里巴巴 Java 开发手册》中强制线程池不允许使用 "),t("code",[s._v("Executors")]),s._v(" 去创建，而是通过 "),t("code",[s._v("ThreadPoolExecutor")]),s._v("的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。")]),s._v(" "),t("h3",{attrs:{id:"_2-1-executors-和executorservice返回线程池对象的弊端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-executors-和executorservice返回线程池对象的弊端"}},[s._v("#")]),s._v(" 2.1 Executors 和ExecutorService返回线程池对象的弊端")]),s._v(" "),t("h4",{attrs:{id:"_2-1-1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-简介"}},[s._v("#")]),s._v(" 2.1.1 简介")]),s._v(" "),t("blockquote",[t("p",[s._v("JDK 5.0起提供了线程池相关API："),t("code",[s._v("ExecutorService")]),s._v(" 和 "),t("code",[s._v("Executors")]),s._v("。")])]),s._v(" "),t("p",[t("code",[s._v("ExecutorService")]),s._v("：真正的线程池接口。常见子类"),t("code",[s._v("ThreadPoolExecutor")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("void execute(Runnable command)")]),s._v(" ：执行任务/命令，没有返回值，一般用来执行"),t("code",[s._v("Runnable")])]),s._v(" "),t("li",[t("code",[s._v("<T> Future<T> submit(Callable<T> task)")]),s._v("：执行任务，有返回值，一般又来执行"),t("code",[s._v("Callable")])]),s._v(" "),t("li",[t("code",[s._v("void shutdown()")]),s._v("：关闭连接池")])]),s._v(" "),t("p",[t("code",[s._v("Executors")]),s._v("：工具类、线程池的工厂类，用于创建并返回不同类型的线程池：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Executors.newCachedThreadPool()")]),s._v("：创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。线程池为无限大，当执行第二个任务时第一个任务已经完成，会复用执行第一个任务的线程，而不用每次新建线程。 （可根据需要创建新线程的线程池）\n"),t("ul",[t("li",[s._v("创建方式： "),t("code",[s._v("Executors.newCachedThreadPool()")]),s._v("；")])])]),s._v(" "),t("li",[t("code",[s._v("Executors.newFixedThreadPool(n)")]),s._v(": 创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。定长线程池的大小最好根据系统资源进行设置，如"),t("code",[s._v("Runtime.getRuntime().availableProcessors()")]),s._v("。\n"),t("ul",[t("li",[s._v("创建方式： "),t("code",[s._v("Executors.newFixedThreadPool()")]),s._v("；")])])]),s._v(" "),t("li",[t("code",[s._v("Executors.newSingleThreadExecutor()")]),s._v(" ：创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。\n"),t("ul",[t("li",[s._v("创建方式： "),t("code",[s._v("Executors.newSingleThreadExecutor ()")]),s._v("；")])])]),s._v(" "),t("li",[t("code",[s._v("Executors.newScheduledThreadPool(n)")]),s._v("：创建一个定长线程池，支持定时及周期性任务执行。\n"),t("ul",[t("li",[s._v("创建方式： "),t("code",[s._v("Executors.newScheduledThreadPool ()")]),s._v("；")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-1-2-executors-返回线程池对象的弊端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-executors-返回线程池对象的弊端"}},[s._v("#")]),s._v(" 2.1.2 Executors 返回线程池对象的弊端")]),s._v(" "),t("p",[t("strong",[s._v("FixedThreadPool 和 SingleThreadExecutor")]),s._v(" ： 允许请求的队列长度为 Integer.MAX_VALUE ，可能堆积大量的请求，从而导致 OOM。")]),s._v(" "),t("p",[t("strong",[s._v("CachedThreadPool 和 ScheduledThreadPool")]),s._v(" ： 允许创建的线程数量为 Integer.MAX_VALUE ，可能会创建大量线程，从而导致 OOM。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("Out Of Memory（OOM）")]),s._v("，一般是由于程序编写者对内存使用不当，如对该释放的内存资源没有释放，导致其一直不能被再次使用而使计算机内存被耗尽的现象。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-threadpoolexecutor创建线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-threadpoolexecutor创建线程池"}},[s._v("#")]),s._v(" 2.2 ThreadPoolExecutor创建线程池")]),s._v(" "),t("h4",{attrs:{id:"_2-2-1-构造方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-构造方法"}},[s._v("#")]),s._v(" 2.2.1 构造方法")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractExecutorService")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadFactory")]),s._v(" threadFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RejectedExecutionHandler")]),s._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadFactory")]),s._v(" threadFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RejectedExecutionHandler")]),s._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("code",[s._v("ThreadPoolExecutor")]),s._v("继承了"),t("code",[s._v("AbstractExecutorService")]),s._v("类，并提供了四个构造器，事实上，通过观察每个构造器的源码具体实现，发现前面三个构造器都是调用的第四个构造器进行的初始化工作。")]),s._v(" "),t("h4",{attrs:{id:"_2-2-2-通过threadpoolexecutor可以实现-executors的三种不同类型的线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-通过threadpoolexecutor可以实现-executors的三种不同类型的线程池"}},[s._v("#")]),s._v(" 2.2.2 通过ThreadPoolExecutor可以实现 Executors的三种不同类型的线程池")]),s._v(" "),t("p",[s._v("![image-20210614211916188](https://gitee.com/koala010/typora/raw/master/img/ThreadPoolExecutor可以实现 Executors的三种不同类型的线程池.png)")]),s._v(" "),t("h2",{attrs:{id:"_3-threadpoolexecutor-类分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-threadpoolexecutor-类分析"}},[s._v("#")]),s._v(" 3. ThreadPoolExecutor 类分析")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 用给定的初始参数创建一个新的ThreadPoolExecutor。\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadFactory")]),s._v(" threadFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                              "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RejectedExecutionHandler")]),s._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("corePoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("\n            maximumPoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("\n            maximumPoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" corePoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("\n            keepAliveTime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalArgumentException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("workQueue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" threadFactory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" handler "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NullPointerException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("corePoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("maximumPoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("workQueue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keepAliveTime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toNanos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("threadFactory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" threadFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handler "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"_3-1-构造器参数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-构造器参数详解"}},[s._v("#")]),s._v(" 3.1 构造器参数详解：")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("corePoolSize")])]),s._v("： =="),t("strong",[s._v("核心线程数线程数定义了最小可以同时运行的线程数量")]),s._v("==。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()或者prestartCoreThread()方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到corePoolSize后，就会把到达的任务放到缓存队列当中；")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("maximumPoolSize")])]),s._v("："),t("strong",[s._v("线程池最大线程数")]),s._v("。它表示在线程池中最多能创建多少个线程；")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("keepAliveTime")])]),s._v("："),t("strong",[s._v("表示线程没有任务执行时最多保持多久时间会终止")]),s._v("。默认情况下，"),t("strong",[s._v("只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用")]),s._v("，直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，keepAliveTime参数也会起作用，直到线程池中的线程数为0；")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("unit")])]),s._v("："),t("strong",[s._v("参数keepAliveTime的时间单位")]),s._v("，有7种取值。TimeUnit.DAYS、TimeUnit.HOURS、TimeUnit.MINUTES、TimeUnit.SECONDS、TimeUnit.MILLISECONDS、TimeUnit.MICROSECONDS、TimeUnit.NANOSECONDS")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("workQueue")])]),s._v("：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：ArrayBlockingQueue、LinkedBlockingQueue、SynchronousQueue。\nArrayBlockingQueue和PriorityBlockingQueue使用较少，一般使用LinkedBlockingQueue和SynchronousQueue。线程池的排队策略与BlockingQueue有关。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("threadFactory")])]),s._v("："),t("code",[s._v("executor")]),s._v("创建新线程的时候会用到；")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("handler")])]),s._v("："),t("strong",[s._v("表示当拒绝处理任务时的策略（饱和策略）")]),s._v("，四种取值，参看下文。")])]),s._v(" "),t("h3",{attrs:{id:"_3-2-饱和策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-饱和策略"}},[s._v("#")]),s._v(" 3.2 饱和策略")]),s._v(" "),t("blockquote",[t("p",[s._v("如果当前同时运行的线程数量达到最大线程数量并且队列也已经被放满了任时，"),t("code",[s._v("ThreadPoolTaskExecutor")]),s._v(" 定义的一些策略。")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("ThreadPoolExecutor.AbortPolicy")]),s._v(":丢弃任务并抛出"),t("code",[s._v("RejectedExecutionException")]),s._v("异常。")]),s._v(" "),t("li",[t("code",[s._v("ThreadPoolExecutor.DiscardPolicy")]),s._v("：也是丢弃任务（不处理），但是不抛出异常。")]),s._v(" "),t("li",[t("code",[s._v("ThreadPoolExecutor.DiscardOldestPolicy")]),s._v("：丢弃最早的未处理的任务请求，然后重新尝试执行任务（重复此过程）")]),s._v(" "),t("li",[t("code",[s._v("ThreadPoolExecutor.CallerRunsPolicy")]),s._v("："),t("strong",[s._v("调用执行自己的线程运行任务")]),s._v("。也就是直接在调用"),t("code",[s._v("execute")]),s._v("方法的线程中运行("),t("code",[s._v("run")]),s._v(")被拒绝的任务，如果执行程序已关闭，则会丢弃该任务。因此这种策略会降低对于新任务提交速度，影响程序的整体性能。如果您的应用程序可以承受此延迟并且你要求任何一个任务请求都要被执行的话，你可以选择这个策略。")])]),s._v(" "),t("h2",{attrs:{id:"_4-线程池原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程池原理"}},[s._v("#")]),s._v(" 4. 线程池原理")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109261001194.png",alt:"线程池原理"}})]),s._v(" "),t("p",[s._v("参看："),t("a",{attrs:{href:"https://snailclimb.gitee.io/javaguide/#/docs/java/multi-thread/2020%E6%9C%80%E6%96%B0Java%E5%B9%B6%E5%8F%91%E8%BF%9B%E9%98%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93?id=_47-%e7%ba%bf%e7%a8%8b%e6%b1%a0%e5%8e%9f%e7%90%86%e5%88%86%e6%9e%90",target:"_blank",rel:"noopener noreferrer"}},[s._v("线程池原理分析"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_4-1-execute-方法和-submit-方法的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-execute-方法和-submit-方法的区别"}},[s._v("#")]),s._v(" 4.1 execute()方法和 submit()方法的区别")]),s._v(" "),t("ol",[t("li",[t("strong",[t("code",[s._v("execute()")]),s._v("方法用于提交不需要返回值的任务，所以无法判断任务是否被线程池执行成功与否；")])]),s._v(" "),t("li",[t("strong",[t("code",[s._v("submit()")]),s._v("方法用于提交需要返回值的任务。线程池会返回一个 "),t("code",[s._v("Future")]),s._v(" 类型的对象，通过这个 "),t("code",[s._v("Future")]),s._v(" 对象可以判断任务是否执行成功")]),s._v("，并且可以通过 "),t("code",[s._v("Future")]),s._v(" 的 "),t("code",[s._v("get()")]),s._v("方法来获取返回值，"),t("code",[s._v("get()")]),s._v("方法会阻塞当前线程直到任务完成，而使用 "),t("code",[s._v("get（long timeout，TimeUnit unit）")]),s._v("方法则会阻塞当前线程一段时间后立即返回，这时候有可能任务没有执行完。")])]),s._v(" "),t("p",[s._v("我们以**"),t("code",[s._v("AbstractExecutorService")]),s._v("**接口中的一个 "),t("code",[s._v("submit")]),s._v(" 方法为例子来看看源代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Future")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" task"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NullPointerException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RunnableFuture")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" ftask "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newTaskFor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ftask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ftask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("上面方法调用的 "),t("code",[s._v("newTaskFor")]),s._v(" 方法返回了一个 "),t("code",[s._v("FutureTask")]),s._v(" 对象。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RunnableFuture")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newTaskFor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" runnable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("runnable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("我们再来看看"),t("code",[s._v("execute()")]),s._v("方法：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_4-2-线程池的执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-线程池的执行过程"}},[s._v("#")]),s._v(" 4.2 线程池的执行过程")]),s._v(" "),t("ol",[t("li",[s._v("当工作线程数 < corePoolSize 时，新创建一个新线程执行新提交任务，即使此时线程池中存在空闲线程；")]),s._v(" "),t("li",[s._v("当工作线程数 == corePoolSize 时，新提交任务将被放入 workQueue 中；")]),s._v(" "),t("li",[s._v("当 workQueue 已满，且工作线程数 < maximumPoolSize 时，新提交任务会创建新的非核心线程执行任务；")]),s._v(" "),t("li",[s._v("当 workQueue 已满，且 工作线程数==maximumPoolSize 时，新提交任务由 RejectedExecutionHandler 处理；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202201151513688.png",alt:"img"}})]),s._v(" "),t("h2",{attrs:{id:"线程池问题的排查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程池问题的排查"}},[s._v("#")]),s._v(" 线程池问题的排查")]),s._v(" "),t("p",[s._v("参看："),t("a",{attrs:{href:"https://xiaomi-info.github.io/2019/12/19/theadpool-rejected-task/",target:"_blank",rel:"noopener noreferrer"}},[s._v("一次线上线程池任务问题处理历程（小米信息技术部）"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);