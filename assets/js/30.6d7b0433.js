(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{457:function(t,s,a){"use strict";a.r(s);var e=a(3),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"反射基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射基础"}},[t._v("#")]),t._v(" 反射基础")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://golang.org/pkg/reflect/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect")]),s("OutboundLink")],1),t._v(" 实现了运行时的反射能力，能够让程序操作不同类型的对象。反射包中有两对非常重要的函数和类型，两个函数分别是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("reflect.TypeOf")]),t._v("能获取类型信息；")]),t._v(" "),s("li",[s("code",[t._v("reflect.ValueOf")]),t._v("能获取数据的运行时表示；")])]),t._v(" "),s("p",[t._v("两个类型是 "),s("code",[t._v("reflect.Type")]),t._v(" 和 "),s("code",[t._v("reflect.Value")]),t._v("，它们与函数是一一对应的关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.draveness.me/golang-reflection.png",alt:"golang-reflection"}})]),t._v(" "),s("p",[t._v("类型 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Type",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Type")]),s("OutboundLink")],1),t._v(" 是反射包定义的一个接口，我们可以使用 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.TypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.TypeOf")]),s("OutboundLink")],1),t._v(" 函数获取任意变量的类型，"),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Type",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Type")]),s("OutboundLink")],1),t._v(" 接口中定义了一些有趣的方法，"),s("code",[t._v("MethodByName")]),t._v(" 可以获取当前类型对应方法的引用、"),s("code",[t._v("Implements")]),t._v(" 可以判断当前类型是否实现了某个接口：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Type "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FieldAlign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Method\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MethodByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NumMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Implements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("反射包中 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value")]),s("OutboundLink")],1),t._v(" 的类型与 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Type",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Type")]),s("OutboundLink")],1),t._v(" 不同，它被声明成了结构体。这个结构体没有对外暴露的字段，但是提供了获取或者写入数据的方法：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含过滤的或者未导出的字段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Value\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("反射包中的所有方法基本都是围绕着 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Type",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Type")]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value")]),s("OutboundLink")],1),t._v(" 两个类型设计的。我们通过 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.TypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.TypeOf")]),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.ValueOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.ValueOf")]),s("OutboundLink")],1),t._v(" 可以将一个普通的变量转换成反射包中提供的 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Type",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Type")]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value")]),s("OutboundLink")],1),t._v("，随后就可以使用反射包中的方法对它们进行复杂的操作。")]),t._v(" "),s("h2",{attrs:{id:"go反射的三大原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go反射的三大原则"}},[t._v("#")]),t._v(" Go反射的三大原则")]),t._v(" "),s("p",[t._v("运行时反射是程序在运行期间检查其自身结构的一种方式。反射带来的灵活性是一把双刃剑，反射作为一种元编程方式可以减少重复代码"),s("a",{attrs:{href:"https://draveness.me/golang/docs/part2-foundation/ch04-basic/golang-reflect/#fn:2",target:"_blank",rel:"noopener noreferrer"}},[t._v("2"),s("OutboundLink")],1),t._v("，但是过量的使用反射会使我们的程序逻辑变得难以理解并且运行缓慢。我们在这一节中会介绍 Go 语言反射的三大法则，其中包括：")]),t._v(" "),s("ol",[s("li",[t._v("从 "),s("code",[t._v("interface{}")]),t._v(" 变量可以反射出反射对象；")]),t._v(" "),s("li",[t._v("从反射对象可以获取 "),s("code",[t._v("interface{}")]),t._v(" 变量；")]),t._v(" "),s("li",[t._v("要修改反射对象，其值必须可设置；")])]),t._v(" "),s("h3",{attrs:{id:"第一法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一法则"}},[t._v("#")]),t._v(" 第一法则")]),t._v(" "),s("p",[t._v("反射的第一法则是我们能将 Go 语言的 "),s("code",[t._v("interface{}")]),t._v(" 变量转换成反射对象。很多读者可能会对这以法则产生困惑 — 为什么是从 "),s("code",[t._v("interface{}")]),t._v(" 变量到反射对象？当我们执行 "),s("code",[t._v("reflect.ValueOf(1)")]),t._v(" 时，虽然看起来是获取了基本类型 "),s("code",[t._v("int")]),t._v(" 对应的反射类型，但是由于 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.TypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.TypeOf")]),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.ValueOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.ValueOf")]),s("OutboundLink")],1),t._v(" 两个方法的入参都是 "),s("code",[t._v("interface{}")]),t._v(" 类型，所以在方法执行的过程中发生了类型转换。")]),t._v(" "),s("p",[t._v("因为Go 语言的函数调用都是值传递的，所以变量会在函数调用时进行类型转换。基本类型 "),s("code",[t._v("int")]),t._v(" 会转换成 "),s("code",[t._v("interface{}")]),t._v(" 类型，这也就是为什么第一条法则是从接口到反射对象。")]),t._v(" "),s("p",[t._v("面提到的 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.TypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.TypeOf")]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.ValueOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.ValueOf")]),s("OutboundLink")],1),t._v(" 函数就能完成这里的转换，如果我们认为 Go 语言的类型和反射类型处于两个不同的世界，那么这两个函数就是连接这两个世界的桥梁。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.draveness.me/golang-interface-to-reflection.png",alt:"golang-interface-to-reflection"}})]),t._v(" "),s("p",[t._v("我们可以通过以下例子简单介绍它们的作用，"),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.TypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.TypeOf")]),s("OutboundLink")],1),t._v(" 获取了变量 "),s("code",[t._v("author")]),t._v(" 的类型，"),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.ValueOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.ValueOf")]),s("OutboundLink")],1),t._v(" 获取了变量的值 "),s("code",[t._v("draven")]),t._v("。如果我们知道了一个变量的类型和值，那么就意味着我们知道了这个变量的全部信息。")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reflect"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tauthor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"draven"')]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TypeOf author:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ValueOf author:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ValueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" run main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\nTypeOf author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\nValueOf author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" draven\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("Go")]),t._v(" "),s("p",[t._v("有了变量的类型之后，我们可以通过 "),s("code",[t._v("Method")]),t._v(" 方法获得类型实现的方法，通过 "),s("code",[t._v("Field")]),t._v(" 获取类型包含的全部字段。对于不同的类型，我们也可以调用不同的方法获取相关信息：")]),t._v(" "),s("ul",[s("li",[t._v("结构体：获取字段的数量并通过下标和字段名获取字段 "),s("code",[t._v("StructField")]),t._v("；")]),t._v(" "),s("li",[t._v("哈希表：获取哈希表的 "),s("code",[t._v("Key")]),t._v(" 类型；")]),t._v(" "),s("li",[t._v("函数或方法：获取入参和返回值的类型；")]),t._v(" "),s("li",[t._v("…")])]),t._v(" "),s("h3",{attrs:{id:"第二法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二法则"}},[t._v("#")]),t._v(" 第二法则")]),t._v(" "),s("p",[t._v("反射的第二法则是我们可以从反射对象可以获取 "),s("code",[t._v("interface{}")]),t._v(" 变量。既然能够将接口类型的变量转换成反射对象，那么一定需要其他方法将反射对象还原成接口类型的变量，"),s("a",{attrs:{href:"https://golang.org/pkg/reflect/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect")]),s("OutboundLink")],1),t._v(" 中的 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value.Interface",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value.Interface")]),s("OutboundLink")],1),t._v(" 就能完成这项工作：")]),t._v(" "),s("p",[t._v("不过调用 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value.Interface",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value.Interface")]),s("OutboundLink")],1),t._v(" 方法只能获得 "),s("code",[t._v("interface{}")]),t._v(" 类型的变量，如果想要将其还原成最原始的状态还需要经过如下所示的显式类型转换：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ValueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("Go")]),t._v(" "),s("p",[t._v("从反射对象到接口值的过程是从接口值到反射对象的镜面过程，两个过程都需要经历两次转换：")]),t._v(" "),s("ul",[s("li",[t._v("从接口值到反射对象：\n"),s("ul",[s("li",[t._v("从基本类型到接口类型的类型转换；")]),t._v(" "),s("li",[t._v("从接口类型到反射对象的转换；")])])]),t._v(" "),s("li",[t._v("从反射对象到接口值：\n"),s("ul",[s("li",[t._v("反射对象转换成接口类型；")]),t._v(" "),s("li",[t._v("通过显式类型转换变成原始类型；")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.draveness.me/golang-bidirectional-reflection.png",alt:"golang-bidirectional-reflection"}})]),t._v(" "),s("p",[t._v("当然不是所有的变量都需要类型转换这一过程。如果变量本身就是 "),s("code",[t._v("interface{}")]),t._v(" 类型的，那么它不需要类型转换，因为类型转换这一过程一般都是隐式的，所以我不太需要关心它，只有在我们需要将反射对象转换回基本类型时才需要显式的转换操作。")]),t._v(" "),s("h3",{attrs:{id:"第三法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三法则"}},[t._v("#")]),t._v(" 第三法则")]),t._v(" "),s("p",[t._v("，假设我们有以下代码：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\tv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ValueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" run reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("panic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mustBeAssignable using unaddressable value\n\ngoroutine "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\nreflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mustBeAssignableSlow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1014c0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("247")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x180")]),t._v("\nreflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mustBeAssignable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("234")]),t._v("\nreflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x100dc0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x414020")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1840")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1606")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x40")]),t._v("\nmain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tmp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sandbox590309925"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("prog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xe0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("p",[t._v("Go")]),t._v(" "),s("p",[t._v("运行上述代码会导致程序崩溃并报出 “reflect: reflect.flag.mustBeAssignable using unaddressable value” 错误，仔细思考一下就能够发现出错的原因：由于 Go 语言的函数调用都是传值的，所以我们得到的反射对象跟最开始的变量没有任何关系，那么直接修改反射对象无法改变原始变量，程序为了防止错误就会崩溃。")]),t._v(" "),s("p",[t._v("想要修改原变量只能使用如下的方法：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\tv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ValueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Elem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" run reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("Go")]),t._v(" "),s("ol",[s("li",[t._v("调用 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.ValueOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.ValueOf")]),s("OutboundLink")],1),t._v(" 获取变量指针；")]),t._v(" "),s("li",[t._v("调用 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value.Elem",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value.Elem")]),s("OutboundLink")],1),t._v(" 获取指针指向的变量；")]),t._v(" "),s("li",[t._v("调用 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value.SetInt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value.SetInt")]),s("OutboundLink")],1),t._v(" 更新变量的值：")])]),t._v(" "),s("p",[t._v("由于 Go 语言的函数调用都是值传递的，所以我们只能只能用迂回的方式改变原变量：先获取指针对应的 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value")]),s("OutboundLink")],1),t._v("，再通过 "),s("a",{attrs:{href:"https://draveness.me/golang/tree/reflect.Value.Elem",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("reflect.Value.Elem")]),s("OutboundLink")],1),t._v(" 方法得到可以被设置的变量，我们可以通过下面的代码理解这个过程：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\tv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("i\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("如果不能直接操作 "),s("code",[t._v("i")]),t._v(" 变量修改其持有的值，我们就只能获取 "),s("code",[t._v("i")]),t._v(" 变量所在地址并使用 "),s("code",[t._v("*v")]),t._v(" 修改所在地址中存储的整数。")])])}),[],!1,null,null,null);s.default=n.exports}}]);