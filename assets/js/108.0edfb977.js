(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{536:function(t,a,s){"use strict";s.r(a);var n=s(3),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot基础"}},[t._v("#")]),t._v(" SpringBoot基础")]),t._v(" "),a("h2",{attrs:{id:"什么是springboot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是springboot"}},[t._v("#")]),t._v(" 什么是SpringBoot？")]),t._v(" "),a("p",[t._v("SpringBoot主要用来简化使用Spring的难度和繁重的XML配置，它是"),a("strong",[t._v("Spring组件的一站式解决方案")]),t._v("，采取了"),a("strong",[t._v("约定优于配置")]),t._v("的方法。")]),t._v(" "),a("h2",{attrs:{id:"springboot的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot的优点"}},[t._v("#")]),t._v(" SpringBoot的优点")]),t._v(" "),a("ul",[a("li",[t._v("可以创建独立的 Spring 应用程序，并且基于其Maven或Gradle插件，可以创建可执行的JARs和WARs；")]),t._v(" "),a("li",[t._v("简化配置，开箱即用，尽可能自动配置Spring和第三方依赖库")]),t._v(" "),a("li",[t._v("直接嵌入Tmocat、Jetty等Servlet服务器")]),t._v(" "),a("li",[t._v("创建独立的Spring程序")]),t._v(" "),a("li",[t._v("提供一系列监控功能，例如指标、运行状况等的监控")]),t._v(" "),a("li",[t._v("完全不需要代码生成和XML配置")])]),t._v(" "),a("h2",{attrs:{id:"spring-mvc-、spring-、spring-boot-和-spring-cloud-有什么区别和联系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc-、spring-、spring-boot-和-spring-cloud-有什么区别和联系"}},[t._v("#")]),t._v(" Spring MVC 、Spring 、Spring Boot 和 Spring Cloud 有什么区别和联系？")]),t._v(" "),a("p",[t._v("Spring是"),a("strong",[t._v("一个轻量级Java开发框架")]),t._v("，最根本的使命是"),a("strong",[t._v("解决企业级应用开发的复杂性，即简化Java开发")]),t._v("。即为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。")]),t._v(" "),a("p",[t._v("SpringMVC是Spring基础之上的一个MVC框架，主要处理web开发的路径映射和视图渲染，属于Spring框架中WEB层开发的一部分。")]),t._v(" "),a("p",[t._v("Spring boot，约定优于配置，简化了spring的配置流程，是"),a("strong",[t._v("Spring组件的一站式解决方案")]),t._v("。")]),t._v(" "),a("p",[t._v("Spring Cloud构建于Spring Boot之上，是一个关注全局的服务治理框架。")]),t._v(" "),a("h3",{attrs:{id:"springboot开发-和-传统的-springmvc开发-有什么不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot开发-和-传统的-springmvc开发-有什么不同"}},[t._v("#")]),t._v(" SpringBoot开发 和 传统的 SpringMVC开发 有什么不同？")]),t._v(" "),a("ul",[a("li",[t._v("SpringBoot简化配置，开箱即用，提升了开发效率")]),t._v(" "),a("li",[t._v("SpringBoot内嵌Tomcat、Jetty等Web服务器，可独立运行；无需打war包在Tomcat服务器上运行")]),t._v(" "),a("li",[t._v("SpringBoot可以快速整合第三方框架，约定大于配置，简化开发流程")]),t._v(" "),a("li",[t._v("SpringBoot提供了一些列的监控功能")])]),t._v(" "),a("h3",{attrs:{id:"springcloud开发相对于springboot开发有什么优势和不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springcloud开发相对于springboot开发有什么优势和不足"}},[t._v("#")]),t._v(" SpringCloud开发相对于SpringBoot开发有什么优势和不足？")]),t._v(" "),a("p",[t._v("优势：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("服务的独立部署")]),t._v("。每个服务都是一个独立的项目，可以独立部署，不依赖于其他服务，耦合性低。")]),t._v(" "),a("li",[a("strong",[t._v("服务的快速启动")]),t._v("。拆分之后服务启动的速度必然要比拆分之前快很多，因为依赖的库少了，代码量也少了。")]),t._v(" "),a("li",[a("strong",[t._v("更加适合敏捷开发")]),t._v("。服务拆分可以快速发布新版本，修改哪个服务只需要发布对应的服务即可，不用整体重新发布。")]),t._v(" "),a("li",[a("strong",[t._v("职责专一，由专门的团队负责专门的服务")]),t._v("。每个团队可以负责对应的业务线，服务的拆分有利于团队之间的分工。")]),t._v(" "),a("li",[a("strong",[t._v("服务可以动态按需扩容")]),t._v("。当某个服务的访问量较大时，我们只需要将这个服务扩容即可。")]),t._v(" "),a("li",[a("strong",[t._v("代码的复用")]),t._v("。每个服务都提供 REST API，所有的基础服务都必须抽出来，很多的底层实现都可以以接口方式提供。")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("分布式部署，调用的复杂性高")]),t._v(" "),a("li",[t._v("独立的数据库，分布式事务的挑战")]),t._v(" "),a("li",[t._v("测试的难度提升")]),t._v(" "),a("li",[t._v("运维难度的提升")])]),t._v(" "),a("p",[t._v("联系")]),t._v(" "),a("p",[t._v("SpringCloud大部分的功能插件都是基于SpringBoot去实现的，SpringCloud关注于全局的微服务整合和管理，将多个SpringBoot单体微服务进行整合以及管理；SpringCloud依赖于SpringBoot开发，而SpringBoot可以独立开发；")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("Spring是核心，提供了基础功能；")]),t._v(" "),a("li",[t._v("Spring MVC 是基于Spring的一个 MVC 框架 ；")]),t._v(" "),a("li",[t._v("Spring Boot 是为简化Spring配置的快速开发框架；")]),t._v(" "),a("li",[t._v("Spring Cloud是构建在Spring Boot之上的服务治理框架。")])]),t._v(" "),a("h2",{attrs:{id:"开启springboot-特性有哪几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启springboot-特性有哪几种方式"}},[t._v("#")]),t._v(" 开启SpringBoot 特性有哪几种方式？")]),t._v(" "),a("h4",{attrs:{id:"_1-继承spring-boot-starter-parent项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-继承spring-boot-starter-parent项目"}},[t._v("#")]),t._v(" 1. 继承spring-boot-starter-parent项目")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    \n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    \n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-parent"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    \n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.5.6.RELEASE"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"_2-导入spring-boot-dependencies项目依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-导入spring-boot-dependencies项目依赖"}},[t._v("#")]),t._v(" 2. 导入spring-boot-dependencies项目依赖")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencyManagement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("        \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-dependencies"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.5.6.RELEASE"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("import"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("        \n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencyManagement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"bootstrap-properties和application-properties-有何区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-properties和application-properties-有何区别"}},[t._v("#")]),t._v(" "),a("code",[t._v("bootstrap.properties")]),t._v("和"),a("code",[t._v("application.properties")]),t._v(" 有何区别 ?")]),t._v(" "),a("p",[t._v("SpringBoot两个核心的配置文件：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("bootstrap")]),t._v("(.yml 或者 .properties)："),a("code",[t._v("boostrap")]),t._v(" 由"),a("code",[t._v("父 ApplicationContext")]),t._v(" 加载的，"),a("strong",[t._v("比"),a("code",[t._v("applicaton")]),t._v("优先加载")]),t._v("，配置在应用程序上下文的引导阶段生效。一般来说我们在 SpringCloud Config 或者Nacos中会用到它。且"),a("strong",[t._v("boostrap里面的属性不能被覆盖")]),t._v("；")]),t._v(" "),a("li",[a("strong",[t._v("application")]),t._v(" (.yml或者.properties)：由"),a("code",[t._v("ApplicatonContext")]),t._v(" 加载，用于 "),a("strong",[t._v("SpringBoot项目的自动化配置")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"springboot的核心注解是什么-由那些注解组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot的核心注解是什么-由那些注解组成"}},[t._v("#")]),t._v(" SpringBoot的核心注解是什么？由那些注解组成？")]),t._v(" "),a("p",[t._v("启动类上@SpringBootApplication是 SpringBoot 的核心注解")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Inherited")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootConfiguration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAutoConfiguration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("excludeFilters "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CUSTOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeExcludeFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CUSTOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationExcludeFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootApplication")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("主要组合包含了以下 3 个注解：")]),t._v(" "),a("ul",[a("li",[t._v("@"),a("strong",[t._v("SpringBootConfiguration")]),t._v("：\n组合了 @Configuration 注解，实现配置文件的功能。")]),t._v(" "),a("li",[t._v("@"),a("strong",[t._v("EnableAutoConfiguration")]),t._v("：\n打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置功能： @SpringBootApplication(exclude = { DataSourceAutoConfiguration.class })。")]),t._v(" "),a("li",[t._v("@"),a("strong",[t._v("ComponentScan")]),t._v("：\nSpring组件扫描。")])]),t._v(" "),a("h2",{attrs:{id:"springboot-中的监视器是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-中的监视器是什么"}},[t._v("#")]),t._v(" SpringBoot 中的监视器是什么?")]),t._v(" "),a("p",[a("strong",[t._v("Spring boot actuator")]),t._v("是spring启动框架中的重要功能之一。Spring boot监视器可帮助您访问生产环境中正在运行的应用程序的当前状态。有几个指标必须在生产环境中进行检查和监控。即使一些外部应用程序可能正在使用这些服务来向相关人员触发警报消息。监视器模块公开了一组可直接作为HTTPURL访问的REST端点来检查状态。")]),t._v(" "),a("h2",{attrs:{id:"springboot-打成的jar和普通的jar有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-打成的jar和普通的jar有什么区别"}},[t._v("#")]),t._v(" SpringBoot 打成的jar和普通的jar有什么区别 ?")]),t._v(" "),a("p",[t._v("SpringBoot 项目最终打包成的 jar 是可执行 jar ，这种 jar 可以直接通过 "),a("code",[t._v("java -jar xxx.jar")]),t._v(" 命令来运行，这种 jar 不可以作为普通的 jar 被其他项目依赖，即使依赖了也无法使用其中的类。")]),t._v(" "),a("p",[t._v("SpringBoot 的 jar 无法被其他项目依赖，主要还是他和普通 jar 的结构不同。普通的 jar 包，解压后直接就是包名，包里就是我们的代码，而 Spring Boot 打包成的可执行 jar 解压后，在 "),a("code",[t._v("\\BOOT-INF\\classes")]),t._v(" 目录下才是我们的代码，因此无法被直接引用。如果非要引用，可以在 pom.xml 文件中增加配置，将 Spring Boot 项目打包成两个 jar ，一个可执行，一个可引用。")]),t._v(" "),a("h2",{attrs:{id:"spring-boot启动的时候如何运行一些特定的代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot启动的时候如何运行一些特定的代码"}},[t._v("#")]),t._v(" Spring Boot启动的时候如何运行一些特定的代码？")]),t._v(" "),a("p",[t._v("如果你想在Spring Boot启动的时候运行一些特定的代码，你可以实现接口 "),a("code",[t._v("ApplicationRunner")]),t._v("或者 "),a("code",[t._v("CommandLineRunner")]),t._v("，这两个接口实现方式一样，它们都只提供了一个run方法。")]),t._v(" "),a("p",[a("strong",[t._v("CommandLineRunner")]),t._v("：启动获取命令行参数。")]),t._v(" "),a("p",[a("strong",[t._v("ApplicationRunner")]),t._v("：启动获取应用启动的时候参数。")]),t._v(" "),a("p",[t._v("如果启动的时候有多个ApplicationRunner和CommandLineRunner，想控制它们的启动顺序，可以实现 "),a("code",[t._v("org.springframework.core.Ordered")]),t._v("接口或者使用 "),a("code",[t._v("org.springframework.core.annotation.Order")]),t._v("注解。")]),t._v(" "),a("h1",{attrs:{id:"springboot原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot原理"}},[t._v("#")]),t._v(" SpringBoot原理")]),t._v(" "),a("h2",{attrs:{id:"springboot-启动流程-需优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-启动流程-需优化"}},[t._v("#")]),t._v(" SpringBoot 启动流程（需优化）")]),t._v(" "),a("ol",[a("li",[t._v("准备环境，根据不同的环境创建不同的Environment")]),t._v(" "),a("li",[t._v("准备、加载上下文，为不同的环境选择不同的Spring Context，然后加载资源，配置Bean")]),t._v(" "),a("li",[t._v("初始化，这个阶段刷新Spring Context，启动应用")]),t._v(" "),a("li",[t._v("最后结束流程")])]),t._v(" "),a("h2",{attrs:{id:"springboot的自动装配原理-启动时都做了什么-starter如何实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot的自动装配原理-启动时都做了什么-starter如何实现"}},[t._v("#")]),t._v(" SpringBoot的自动装配原理（启动时都做了什么）？Starter如何实现？")]),t._v(" "),a("blockquote",[a("p",[t._v("SpringBoot 定义了一套接口规范，这套规范规定："),a("strong",[t._v("SpringBoot 在启动时会扫描外部引用 jar 包中的"),a("code",[t._v("META-INF/spring.factories")]),t._v("文件，将文件中配置的类型信息加载到 Spring 容器")]),t._v("（此处涉及到 JVM 类加载机制与 Spring 的容器知识），"),a("strong",[t._v("并执行类中定义的各种操作")]),t._v("。对于外部 jar 来说，只需要按照 SpringBoot 定义的标准，就能将自己的功能装置进 SpringBoot。")])]),t._v(" "),a("ol",[a("li",[t._v("Spring Boot 通过"),a("code",[t._v("@EnableAutoConfiguration")]),t._v("开启自动装配")]),t._v(" "),a("li",[t._v("通过 SpringFactoriesLoader 最终加载"),a("code",[t._v("META-INF/spring.factories")]),t._v("中的自动配置类实现自动装配\n"),a("ol",[a("li",[t._v("整个J2EE的整体解决方案和自动配置都在"),a("code",[t._v("springboot-autoconfigure")]),t._v("的jar包中")]),t._v(" "),a("li",[a("strong",[t._v("它将所有需要导入的组件以全类名的方式返回 ， 这些组件就会被添加到容器中 ；")])]),t._v(" "),a("li",[t._v("它会给容器中导入非常多的自动配置类 （"),a("code",[t._v("xxxAutoConfiguration")]),t._v("）, 就是给容器中导入这个场景需要的所有组件 ， 并配置好这些组件")])])]),t._v(" "),a("li",[t._v("通过"),a("code",[t._v("@Conditional")]),t._v("注解按需加载的配置类")]),t._v(" "),a("li",[t._v("想要其生效必须引入"),a("code",[t._v("spring-boot-starter-xxx")]),t._v("包实现起步依赖")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109161008646.jpeg",alt:"SpringBoot自动配置原理 总结"}})]),t._v(" "),a("p",[t._v("详情参看："),a("RouterLink",{attrs:{to:"/java相关框架/spring family/SpringBoot/SpringBoot自动装配和Starter原理.html"}},[t._v("SpringBoot自动装配和Starter原理.md")])],1)])}),[],!1,null,null,null);a.default=r.exports}}]);