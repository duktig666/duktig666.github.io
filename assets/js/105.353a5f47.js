(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{532:function(a,s,t){"use strict";t.r(s);var n=t(3),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"spring是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring是什么"}},[a._v("#")]),a._v(" Spring是什么？")]),a._v(" "),s("blockquote",[s("p",[a._v("Spring是"),s("strong",[a._v("一个轻量级Java开发框架")]),a._v("，最根本的使命是"),s("strong",[a._v("解决企业级应用开发的复杂性，即简化Java开发")]),a._v("。即为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。")]),a._v(" "),s("p",[a._v("Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。")])]),a._v(" "),s("p",[s("strong",[a._v("设计目标")]),a._v("：Spring为开发者提供一个一站式轻量级应用开发平台")]),a._v(" "),s("p",[s("strong",[a._v("设计理念")]),a._v("：在JavaEE开发中，支持POJO和JavaBean开发方式，使应用面向接口开发，充分支持OO（面向对象）设计方法；Spring通过IoC容器实现对象耦合关系的管理，并实现依赖反转，将对象之间的依赖关系交给IoC容器，实现解耦；")]),a._v(" "),s("p",[s("strong",[a._v("核心")]),a._v("：IoC容器和AOP模块。通过IoC容器管理POJO对象以及他们之间的耦合关系；通过AOP以动态非侵入的方式增强服务。IoC让相互协作的组件保持松散的耦合，而AOP编程允许你把遍布于应用各层的功能分离出来形成可重用的功能组件。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("另一种介绍：")]),a._v(" "),s("blockquote",[s("p",[a._v("Spring 框架可以说是Java 世界最为成功的框架，在企业实际应用中，大部分的企业架构都基于Spring 框架。它的成功来自于理念，而不是技术，它最为核心的理念是IoC （控制反转）和AOP （面向切面编程），其中IoC 是Spring的基础，而AOP 则是其重要的功能，最为典型的当属数据库事务的使用。")]),a._v(" "),s("p",[a._v("Spring最根本的使命是解决企业级应用开发的复杂性，即简化Java开发。")])]),a._v(" "),s("h2",{attrs:{id:"spring的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的优缺点"}},[a._v("#")]),a._v(" Spring的优缺点")]),a._v(" "),s("p",[a._v("优点")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("方便解耦，简化开发")]),a._v(" "),s("p",[a._v("Spring就是一个大工厂，可以将所有对象的创建和依赖关系的维护，交给Spring管理。")])]),a._v(" "),s("li",[s("p",[a._v("AOP编程的支持")]),a._v(" "),s("p",[a._v("Spring提供面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。")])]),a._v(" "),s("li",[s("p",[a._v("声明式事务的支持")]),a._v(" "),s("p",[a._v("只需要通过配置就可以完成对事务的管理，而无需手动编程。")])]),a._v(" "),s("li",[s("p",[a._v("方便程序的测试")]),a._v(" "),s("p",[a._v("Spring对Junit4支持，可以通过注解方便的测试Spring程序。")])]),a._v(" "),s("li",[s("p",[a._v("方便集成各种优秀框架")]),a._v(" "),s("p",[a._v("Spring不排斥各种优秀的开源框架，其内部提供了对各种优秀框架的直接支持（如：Struts、Hibernate、MyBatis等）。")])]),a._v(" "),s("li",[s("p",[a._v("降低JavaEE API的使用难度")]),a._v(" "),s("p",[a._v("Spring对JavaEE开发中非常难用的一些API（JDBC、JavaMail、远程调用等），都提供了封装，使这些API应用难度大大降低。")])])]),a._v(" "),s("p",[a._v("缺点")]),a._v(" "),s("ul",[s("li",[a._v("Spring明明一个很轻量级的框架，却给人感觉大而全")]),a._v(" "),s("li",[a._v("Spring依赖反射，反射影响性能")]),a._v(" "),s("li",[a._v("使用门槛升高，入门Spring需要较长时间")])]),a._v(" "),s("h2",{attrs:{id:"spring的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的组成"}},[a._v("#")]),a._v(" Spring的组成")]),a._v(" "),s("p",[a._v("Spring 总共大约有 20 个模块， 由 1300 多个不同的文件构成。 而这些组件被分别整合在"),s("code",[a._v("核心容器（Core Container）")]),a._v(" 、 "),s("code",[a._v("AOP（Aspect Oriented Programming）和设备支持（Instrmentation）")]),a._v(" 、"),s("code",[a._v("数据访问与集成（Data Access/Integeration）")]),a._v(" 、 "),s("code",[a._v("Web")]),a._v("、 "),s("code",[a._v("消息（Messaging）")]),a._v(" 、 "),s("code",[a._v("Test")]),a._v("等 6 个模块中。 以下是 Spring 4.x 的模块结构图：")]),a._v(" "),s("p",[s("em",[a._v("目前最新的 5.x 版本中 Web 模块的 Portlet 组件已经被废弃掉，同时增加了用于异步响应式处理的 WebFlux 组件。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109071442872.jpg",alt:"Spring5的组成"}})]),a._v(" "),s("ul",[s("li",[a._v("spring core：提供了框架的基本组成部分，包括控制反转（Inversion of Control，IOC）和依赖注入（Dependency Injection，DI）功能。\n"),s("ul",[s("li",[a._v("spring beans：提供了BeanFactory，是工厂模式的一个经典实现，Spring将管理对象称为Bean。")]),a._v(" "),s("li",[a._v("spring context：构建于 core 封装包基础上的 context 封装包，提供了一种框架式的对象访问方法。")])])]),a._v(" "),s("li",[a._v("Spring Data Access/Integration\n"),s("ul",[s("li",[a._v("spring jdbc：提供了对数据库访问的抽象 JDBC。不同的数据库都有自己独立的 API 用于操作数据库，而 Java 程序只需要和 JDBC API 交互，这样就屏蔽了数据库的影响。")]),a._v(" "),s("li",[a._v("spring-tx : 提供对事务的支持。")]),a._v(" "),s("li",[a._v("spring-orm : 提供对 Hibernate 等 ORM 框架的支持。")]),a._v(" "),s("li",[a._v("spring-oxm ： 提供对 Castor 等 OXM 框架的支持。")]),a._v(" "),s("li",[a._v("spring-jms : Java 消息服务。")])])]),a._v(" "),s("li",[a._v("spring aop：提供了面向切面的编程实现，让你可以自定义拦截器、切点等。")]),a._v(" "),s("li",[a._v("spring Web：提供了针对 Web 开发的集成特性，例如文件上传，利用 servlet listeners 进行 ioc 容器初始化和针对 Web 的 ApplicationContext。\n"),s("ul",[s("li",[a._v("spring-web ：对 Web 功能的实现提供一些最基础的支持。")]),a._v(" "),s("li",[a._v("spring-webmvc ： 提供对 Spring MVC 的实现。")]),a._v(" "),s("li",[a._v("spring-websocket ： 提供了对 WebSocket 的支持，WebSocket 可以让客户端和服务端进行双向通信。")]),a._v(" "),s("li",[a._v("spring-webflux ：提供对 WebFlux 的支持。WebFlux 是 Spring Framework 5.0 中引入的新的响应式框架。与 Spring MVC 不同，它不需要 Servlet API，是完全异步.")])])]),a._v(" "),s("li",[a._v("spring test：主要为测试提供支持的，支持使用JUnit或TestNG对Spring组件进行单元测试和集成测试。Spring 团队提倡测试驱动开发（TDD）。有了控制反转 (IoC)的帮助，单元测试和集成测试变得更简单。")])]),a._v(" "),s("h2",{attrs:{id:"spring核心ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring核心ioc"}},[a._v("#")]),a._v(" Spring核心IoC")]),a._v(" "),s("blockquote",[s("p",[a._v("IoC（Inverse of Control:控制反转）是一种"),s("strong",[a._v("设计思想")]),a._v("，就是 "),s("strong",[a._v("将原本在程序中手动创建对象的控制权，交由Spring框架来管理。")]),a._v(" IoC 在其他语言中也有应用，并非 Spring 特有。 "),s("strong",[a._v("IoC 容器是 Spring 用来实现 IoC 的载体， IoC 容器实际上就是个Map（key，value）,Map 中存放的是各种对象。")])])]),a._v(" "),s("h3",{attrs:{id:"为什么叫控制反转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么叫控制反转"}},[a._v("#")]),a._v(" 为什么叫控制反转？")]),a._v(" "),s("p",[s("strong",[a._v("控制")]),a._v(" ：指的是对象创建（实例化、管理）的权力")]),a._v(" "),s("p",[s("strong",[a._v("反转")]),a._v(" ：控制权交给外部环境（Spring 框架、IoC 容器）")]),a._v(" "),s("blockquote",[s("p",[a._v("如何理解好IoC呢？理解好IoC的关键是要明确“谁控制谁，控制什么，为何是反转（有反转就应该有正转了），哪些方面反转了”，那我们来深入分析一下：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("**谁控制谁，控制什么：**传统Java SE程序设计，我们直接在对象内部通过new进行创建对象，是程序主动去创建依赖对象；而IoC是有专门一个容器来创建这些对象，即由IoC容器来控制对 象的创建；"),s("strong",[a._v("谁控制谁？当然是IoC 容器控制了对象；控制什么？那就是主要控制了外部资源获取（不只是对象包括比如文件等）。")])])]),a._v(" "),s("li",[s("p",[a._v("**为何是反转，哪些方面反转了：**有反转就有正转，传统应用程序是由我们自己在对象中主动控制去直接获取依赖对象，也就是正转；而反转则是由容器来帮忙创建及注入依赖对象；为何是反转？"),s("strong",[a._v("因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是反转；哪些方面反转了？依赖对象的获取被反转了。")])])])])]),a._v(" "),s("p",[s("strong",[a._v("图例")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109071517854.png",alt:"Spring IOC控制反转图例"}})]),a._v(" "),s("p",[a._v("传统程序设计都是主动去创建相关对象然后再组合起来：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/koala010/typora/raw/master/img/image-20210216152102765.png",alt:"image-20210216152102765"}})]),a._v(" "),s("p",[a._v("当有了IoC/DI的容器后，在客户端类中不再主动去创建这些对象了，如图所示:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/koala010/typora/raw/master/img/image-20210216152132082.png",alt:"image-20210216152132082"}})]),a._v(" "),s("p",[a._v("其实"),s("strong",[a._v("IoC对编程带来的最大改变不是从代码上，而是从思想上，发生了“主从换位”的变化。应用程序原本是老大，要获取什么资源都是主动出击，但是在IoC/DI思想中，应用程序就变成被动的了，被动的等待IoC容器来创建并注入它所需要的资源了。")])]),a._v(" "),s("h3",{attrs:{id:"ioc的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc的好处"}},[a._v("#")]),a._v(" IoC的好处")]),a._v(" "),s("p",[a._v("IoC的思想最核心的地方在于，==资源不由使用资源的双方管理，而由不使用资源的第三方管理==，这可以带来很多好处。")]),a._v(" "),s("p",[s("strong",[a._v("第一，资源集中管理，实现资源的可配置和易管理。")])]),a._v(" "),s("p",[s("strong",[a._v("第二，降低了使用资源双方的依赖程度，也就是我们说的耦合度")]),a._v("。")]),a._v(" "),s("p",[a._v("参看："),s("a",{attrs:{href:"https://www.jianshu.com/p/ad05cfe7868e",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Spring》IOC实现原理"),s("OutboundLink")],1),a._v(" （依赖倒置、控制反转、依赖注入思想上分析）")]),a._v(" "),s("h2",{attrs:{id:"spring核心aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring核心aop"}},[a._v("#")]),a._v(" Spring核心AOP")]),a._v(" "),s("blockquote",[s("p",[a._v("OOP(Object-Oriented Programming)面向对象编程，允许开发者定义纵向的关系，导致了大量代码的重复，而不利于各个模块的重用。")]),a._v(" "),s("p",[a._v("AOP(Aspect-Oriented Programming:面向切面编程)能够将那些与业务无关，"),s("strong",[a._v("却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来")]),a._v("，便于"),s("strong",[a._v("减少系统的重复代码")]),a._v("，"),s("strong",[a._v("降低模块间的耦合度")]),a._v("，并"),s("strong",[a._v("有利于未来的可拓展性和可维护性")]),a._v("。")])]),a._v(" "),s("p",[a._v("AOP 是一种编程思想，是面向对象编程（OOP）的一种补充。面向对象编程将程序抽象成各个层次的对象，而面向切面编程是将程序抽象成各个切面。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109071538296.png",alt:"AOP实例"}})]),a._v(" "),s("p",[a._v("AOP 要实现的是在我们原来写的代码的基础上，进行一定的包装，如在方法执行前、方法返回后、方法抛出异常后等地方进行一定的拦截处理或者叫增强处理。")]),a._v(" "),s("p",[a._v("AOP 的实现并不是因为 Java 提供了什么神奇的钩子，可以把方法的几个生命周期告诉我们，而是我们要实现一个代理，实际运行的实例其实是生成的代理类的实例。")]),a._v(" "),s("h3",{attrs:{id:"为什么需要-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-aop"}},[a._v("#")]),a._v(" 为什么需要 AOP？")]),a._v(" "),s("p",[a._v("想象下面的场景，开发中在多个模块间有某段重复的代码，我们通常是怎么处理的？显然，没有人会靠“复制粘贴”吧。"),s("strong",[a._v("在传统的面向过程编程中，我们也会将这段代码，抽象成一个方法，然后在需要的地方分别调用这个方法，这样当这段代码需要修改时，我们只需要改变这个方法就可以了。然而需求总是变化的，有一天，新增了一个需求，需要再多出做修改，我们需要再抽象出一个方法，然后再在需要的地方分别调用这个方法，又或者我们不需要这个方法了，我们还是得删除掉每一处调用该方法的地方")]),a._v("。实际上涉及到多个地方具有相同的修改的问题我们都可以通过 AOP 来解决。")]),a._v(" "),s("h3",{attrs:{id:"aop-术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop-术语"}},[a._v("#")]),a._v(" AOP 术语")]),a._v(" "),s("p",[a._v("AOP 领域中的特性术语：")]),a._v(" "),s("ul",[s("li",[a._v("通知（Advice）: AOP 框架中的增强处理。通知描述了切面何时执行以及如何执行增强处理。")]),a._v(" "),s("li",[a._v("连接点（join point）: 连接点表示应用执行过程中能够插入切面的一个点，这个点可以是方法的调用、异常的抛出。在 Spring AOP 中，连接点总是方法的调用。")]),a._v(" "),s("li",[a._v("切点（PointCut）:切点的定义会匹配通知所要织入的一个或多个连接点。我们通常使用明确的类和方法名称，或是利用正则表达式定义所匹配的类和方法名称来指定这些切点。")]),a._v(" "),s("li",[a._v("切面（Aspect）: 切面是通知和切点的结合。")]),a._v(" "),s("li",[a._v("引入（Introduction）：引入允许我们向现有的类添加新的方法或者属性。")]),a._v(" "),s("li",[a._v("织入（Weaving）: 将增强处理添加到目标对象中，并创建一个被增强的对象，这个过程就是织入。")]),a._v(" "),s("li",[a._v("目标对象（Target Object）： 被一个或者多个切面（aspect）所通知（advise）的对象。它通常是一个代理对象。也有人把它叫做 被通知（adviced） 对象。 既然Spring AOP是通过运行时代理实现的，这个对象永远是一个 被代理（proxied） 对象。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109071556064.png",alt:"AOP术语"}})]),a._v(" "),s("h3",{attrs:{id:"aop-实现分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop-实现分类"}},[a._v("#")]),a._v(" AOP 实现分类")]),a._v(" "),s("p",[a._v("AOP 要达到的效果是，保证开发者不修改源代码的前提下，去为系统中的业务组件添加某种通用功能。AOP 的本质是由 AOP 框架修改业务组件的多个方法的源代码，看到这其实应该明白了，AOP 其实就是代理模式的典型应用。\n按照 AOP 框架修改源代码的时机，可以将其分为两类：")]),a._v(" "),s("ul",[s("li",[a._v("静态 AOP 实现， AOP 框架在编译阶段对程序源代码进行修改，生成了静态的 AOP 代理类（生成的 *.class 文件已经被改掉了，需要使用特定的编译器），比如 AspectJ。")]),a._v(" "),s("li",[a._v("动态 AOP 实现， AOP 框架在运行阶段对动态生成代理对象（在内存中以 JDK 动态代理，或 CGlib 动态地生成 AOP 代理类），如 SpringAOP。")])]),a._v(" "),s("p",[a._v("下面给出常用 AOP 实现比较：\n"),s("img",{attrs:{src:"https://gitee.com/koala010/typora/raw/master/img/image-20210216155841260.png",alt:"image-20210216155841260"}})]),a._v(" "),s("p",[a._v("关于动态代理可参考我的另一篇博客："),s("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/107160411",target:"_blank",rel:"noopener noreferrer"}},[a._v("实例理解JDK动态代理和Cglib动态代理及其区别"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"spring-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop"}},[a._v("#")]),a._v(" Spring AOP")]),a._v(" "),s("p",[s("strong",[a._v("Spring AOP就是基于动态代理的")]),a._v("，如果要代理的对象，实现了某个接口，那么Spring AOP会使用"),s("strong",[a._v("JDK Proxy")]),a._v("，去创建代理对象，而对于没有实现接口的对象，就无法使用 JDK Proxy 去进行代理了，这时候Spring AOP会使用"),s("strong",[a._v("Cglib")]),a._v(" ，这时候Spring AOP会使用 "),s("strong",[a._v("Cglib")]),a._v(" 生成一个被代理对象的子类来作为代理，如下图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/koala010/typora/raw/master/img/image-20210216152837816.png",alt:"image-20210216152837816"}})]),a._v(" "),s("p",[a._v("当然也可以使用 AspectJ ,Spring AOP 已经集成了AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。")]),a._v(" "),s("p",[a._v("使用 AOP 之后我们可以把一些通用功能抽象出来，在需要用到的地方直接使用即可，这样大大简化了代码量。我们需要增加新功能时也方便，这样也提高了系统扩展性。日志功能、事务管理等等场景都用到了 AOP 。")]),a._v(" "),s("p",[a._v("Spring AOP的使用，可参考："),s("a",{attrs:{href:"https://www.cnblogs.com/joy99/p/10941543.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Spring AOP——Spring 中面向切面编程"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"spring-aop-和-aspectj-aop-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop-和-aspectj-aop-有什么区别"}},[a._v("#")]),a._v(" Spring AOP 和 AspectJ AOP 有什么区别？")]),a._v(" "),s("p",[s("strong",[a._v("Spring AOP 属于运行时增强，而 AspectJ 是编译时增强。")]),a._v(" Spring AOP 基于代理(Proxying)，而 AspectJ 基于字节码操作(Bytecode Manipulation)。")]),a._v(" "),s("p",[a._v("Spring AOP 已经集成了 AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。AspectJ 相比于 Spring AOP 功能更加强大，但是 Spring AOP 相对来说更简单，")]),a._v(" "),s("p",[a._v("如果我们的切面比较少，那么两者性能差异不大。但是，当切面太多的话，最好选择 AspectJ ，它比Spring AOP 快很多。")]),a._v(" "),s("p",[a._v("关于AspectJ的使用，可参考："),s("a",{attrs:{href:"https://www.javadoop.com/post/aspectj",target:"_blank",rel:"noopener noreferrer"}},[a._v("AspectJ 使用介绍"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"spring的bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的bean"}},[a._v("#")]),a._v(" Spring的Bean")]),a._v(" "),s("h3",{attrs:{id:"什么是bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是bean"}},[a._v("#")]),a._v(" 什么是Bean？")]),a._v(" "),s("p",[a._v("简单来说，bean 代指的就是那些"),s("strong",[a._v("被 IoC 容器所管理的对象")]),a._v("。")]),a._v(" "),s("p",[a._v("由 Spring IoC 容器管理的对象称为 Bean，Bean 根据 Spring 配置文件中的信息创建。可以把 Spring IoC 容器看作是一个大工厂，Bean 相当于工厂的产品，如果希望这个大工厂生产和管理 Bean，则需要告诉容器需要哪些 Bean，以及需要哪种方式装配 Bean，这个是通过配置元数据来定义的。配置元数据可以是 XML 文件、注解或者 Java 配置类。")]),a._v(" "),s("h3",{attrs:{id:"bean的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean的作用域"}},[a._v("#")]),a._v(" Bean的作用域")]),a._v(" "),s("p",[a._v("Spring 容器在初始化一个 Bean 实例时，同时会指定该实例的作用域。Spring 5 支持以下 6 种作用域。")]),a._v(" "),s("p",[s("strong",[a._v("singleton")])]),a._v(" "),s("p",[a._v("默认值，单例模式，表示在 Spring 容器中只有一个 Bean 实例，Bean 以单例的方式存在。")]),a._v(" "),s("p",[s("strong",[a._v("prototype")])]),a._v(" "),s("p",[a._v("原型模式，表示每次通过 Spring 容器获取 Bean 时，容器都会创建一个 Bean 实例。")]),a._v(" "),s("p",[s("strong",[a._v("request")])]),a._v(" "),s("p",[a._v("每次 HTTP 请求，容器都会创建一个 Bean 实例。该作用域只在当前 HTTP Request 内有效。")]),a._v(" "),s("p",[s("strong",[a._v("session")])]),a._v(" "),s("p",[a._v("同一个 HTTP Session 共享一个 Bean 实例，不同的 Session 使用不同的 Bean 实例。该作用域仅在当前 HTTP Session 内有效。")]),a._v(" "),s("p",[s("strong",[a._v("application")])]),a._v(" "),s("p",[a._v("同一个 Web 应用共享一个 Bean 实例，该作用域在当前 ServletContext 内有效。\n类似于 singleton，不同的是，singleton 表示每个 IoC 容器中仅有一个 Bean 实例，而同一个 Web 应用中可能会有多个 IoC 容器，但一个 Web 应用只会有一个 ServletContext，也可以说 application 才是 Web 应用中货真价实的单例模式。")]),a._v(" "),s("p",[s("strong",[a._v("websocket")])]),a._v(" "),s("p",[a._v("websocket 的作用域是 WebSocket ，即在整个 WebSocket 中有效")]),a._v(" "),s("p",[a._v("request、session、application、websocket 和 global Session 作用域只能在 Web 环境下使用，如果使用 ClassPathXmlApplicationContext 加载这些作用域中的任意一个的 Bean，就会抛出异常。")]),a._v(" "),s("h3",{attrs:{id:"如何配置-bean-的作用域呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何配置-bean-的作用域呢"}},[a._v("#")]),a._v(" 如何配置 bean 的作用域呢？")]),a._v(" "),s("p",[a._v("xml 方式：")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("singleton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注解方式：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConfigurableBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SCOPE_PROTOTYPE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("personPrototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"bean的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean的生命周期"}},[a._v("#")]),a._v(" Bean的生命周期")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://typecho-1300745270.cos.ap-shanghai.myqcloud.com/typora/202109071618798.jpeg",alt:"Bean的生命周期"}})]),a._v(" "),s("ol",[s("li",[s("p",[a._v("Spring 启动，查找并加载需要被 Spring 管理的 Bean，并实例化 Bean。")])]),a._v(" "),s("li",[s("p",[a._v("利用依赖注入完成 Bean 中所有属性值的配置注入。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 BeanNameAware 接口，则 Spring 调用 Bean 的 setBeanName() 方法传入当前 Bean 的 id 值。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 BeanFactoryAware 接口，则 Spring 调用 setBeanFactory() 方法传入当前工厂实例的引用。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 ApplicationContextAware 接口，则 Spring 调用 setApplicationContext() 方法传入当前 ApplicationContext 实例的引用。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 [BeanPostProcessor] 接口，则 Spring 调用该接口的预初始化方法 postProcessBeforeInitialzation() 对 Bean 进行加工操作，此处非常重要，Spring 的 AOP 就是利用它实现的。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 InitializingBean 接口，则 Spring 将调用 afterPropertiesSet() 方法。")])]),a._v(" "),s("li",[s("p",[a._v("如果在配置文件中通过 init-method 属性指定了初始化方法，则调用该初始化方法。")])]),a._v(" "),s("li",[s("p",[a._v("如果 [BeanPostProcessor ]和 Bean 关联，则 Spring 将调用该接口的初始化方法 postProcessAfterInitialization()。此时，Bean 已经可以被应用系统使用了。")])]),a._v(" "),s("li",[s("p",[a._v("如果在 中指定了该 Bean 的作用域为 singleton，则将该 Bean 放入 Spring IoC 的缓存池中，触发 Spring 对该 Bean 的生命周期管理； 如果在 中指定了该 Bean 的作用域为 prototype，则将该 Bean 交给调用者，调用者管理该 Bean 的生命周期，Spring 不再管理该 Bean。")])]),a._v(" "),s("li",[s("p",[a._v("如果 Bean 实现了 DisposableBean 接口，则 Spring 会调用 destory() 方法销毁 Bean；如果在配置文件中通过 destory-method 属性指定了 Bean 的销毁方法，则 Spring 将调用该方法对 Bean 进行销毁。")])])]),a._v(" "),s("h3",{attrs:{id:"单例bean的线程安全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例bean的线程安全问题"}},[a._v("#")]),a._v(" 单例bean的线程安全问题")]),a._v(" "),s("p",[a._v("单例 bean 存在线程安全问题，主要是因为当多个线程操作同一个对象的时候是存在资源竞争的。")]),a._v(" "),s("p",[a._v("常见的有两种解决办法：")]),a._v(" "),s("ol",[s("li",[a._v("在 bean 中尽量避免定义可变的成员变量。")]),a._v(" "),s("li",[a._v("在类中定义一个 "),s("code",[a._v("ThreadLocal")]),a._v(" 成员变量，将需要的可变成员变量保存在 "),s("code",[a._v("ThreadLocal")]),a._v(" 中（推荐的一种方式）。")])]),a._v(" "),s("p",[a._v("不过，大部分 bean 实际都是无状态（没有实例变量）的（比如 Dao、Service），这种情况下， bean 是线程安全的。")]),a._v(" "),s("h3",{attrs:{id:"component-和-bean-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-和-bean-的区别是什么"}},[a._v("#")]),a._v(" @Component 和 @Bean 的区别是什么？")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("@Component")]),a._v(" 注解作用于类，而"),s("code",[a._v("@Bean")]),a._v("注解作用于方法。")]),a._v(" "),s("li",[s("code",[a._v("@Component")]),a._v("通常是通过类路径扫描来自动侦测以及自动装配到 Spring 容器中（我们可以使用 "),s("code",[a._v("@ComponentScan")]),a._v(" 注解定义要扫描的路径从中找出标识了需要装配的类自动装配到 Spring 的 bean 容器中）。"),s("code",[a._v("@Bean")]),a._v(" 注解通常是我们在标有该注解的方法中定义产生这个 bean,"),s("code",[a._v("@Bean")]),a._v("告诉了 Spring 这是某个类的实例，当我需要用它的时候还给我。")]),a._v(" "),s("li",[s("code",[a._v("@Bean")]),a._v(" 注解比 "),s("code",[a._v("@Component")]),a._v(" 注解的自定义性更强，而且很多地方我们只能通过 "),s("code",[a._v("@Bean")]),a._v(" 注解来注册 bean。比如当我们引用第三方库中的类需要装配到 "),s("code",[a._v("Spring")]),a._v("容器时，则只能通过 "),s("code",[a._v("@Bean")]),a._v("来实现。")])]),a._v(" "),s("p",[s("code",[a._v("@Bean")]),a._v("注解使用示例：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Configuration")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AppConfig")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("transferService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferServiceImpl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("上面的代码相当于下面的 xml 配置")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("beans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("transferService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("com.acme.TransferServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("beans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("下面这个例子是通过 "),s("code",[a._v("@Component")]),a._v(" 无法实现的。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OneService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"将一个类声明为-bean-的注解有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将一个类声明为-bean-的注解有哪些"}},[a._v("#")]),a._v(" 将一个类声明为 bean 的注解有哪些?")]),a._v(" "),s("p",[a._v("我们一般使用 "),s("code",[a._v("@Autowired")]),a._v(" 注解自动装配 bean，要想把类标识成可用于 "),s("code",[a._v("@Autowired")]),a._v(" 注解自动装配的 bean 的类,采用以下注解可实现：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("@Component")]),a._v(" ：通用的注解，可标注任意类为 "),s("code",[a._v("Spring")]),a._v(" 组件。如果一个 Bean 不知道属于哪个层，可以使用"),s("code",[a._v("@Component")]),a._v(" 注解标注。")]),a._v(" "),s("li",[s("code",[a._v("@Repository")]),a._v(" : 对应持久层即 Dao 层，主要用于数据库相关操作。")]),a._v(" "),s("li",[s("code",[a._v("@Service")]),a._v(" : 对应服务层，主要涉及一些复杂的逻辑，需要用到 Dao 层。")]),a._v(" "),s("li",[s("code",[a._v("@Controller")]),a._v(" : 对应 Spring MVC 控制层，主要用户接受用户请求并调用 Service 层返回数据给前端页面。")])]),a._v(" "),s("h2",{attrs:{id:"spring的依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的依赖注入"}},[a._v("#")]),a._v(" Spring的依赖注入")]),a._v(" "),s("h3",{attrs:{id:"什么是spring的依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是spring的依赖注入"}},[a._v("#")]),a._v(" 什么是Spring的依赖注入？")]),a._v(" "),s("p",[a._v("所谓依赖注入（Dependency Injection），即组件之间的依赖关系由容器在应用系统运行期来决定，也就是由容器动态地将某种依赖关系的目标对象实例注入到应用系统中的各个关联的组件之中。")]),a._v(" "),s("p",[a._v("在解耦的过程中，我们将对象的创建交给Spring容器管理，当我们需要用其他类的对象，由Spring提供，我们只需在配置文件里声明即可。A类使用B类，就产生依赖关系，Spring给我们解决依赖关系就是依赖注入（DI）")]),a._v(" "),s("h3",{attrs:{id:"依赖注入有什么优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入有什么优势"}},[a._v("#")]),a._v(" 依赖注入有什么优势")]),a._v(" "),s("p",[a._v("依赖注入之所以更流行是因为它是一种更可取的方式：让容器全权负责依赖查询，受管组件只需要暴露JavaBean的setter方法或者带参数的构造器或者接口，使容器可以在初始化时组装对象的依赖关系。其与依赖查找方式相比，主要优势为：")]),a._v(" "),s("ul",[s("li",[a._v("查找定位操作与应用代码完全无关。")]),a._v(" "),s("li",[a._v("不依赖于容器的API，可以很容易地在任何容器以外使用应用对象。")]),a._v(" "),s("li",[a._v("不需要特殊的接口，绝大多数对象可以做到完全不必依赖容器。")])]),a._v(" "),s("h3",{attrs:{id:"有哪些不同类型的依赖注入实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些不同类型的依赖注入实现方式"}},[a._v("#")]),a._v(" 有哪些不同类型的依赖注入实现方式？")]),a._v(" "),s("p",[a._v("依赖注入是时下最流行的IoC实现方式，依赖注入分为接口注入（Interface Injection），Setter方法注入（Setter Injection）和构造器注入（Constructor Injection）三种方式。其中接口注入由于在灵活性和易用性比较差，现在从Spring4开始已被废弃。")]),a._v(" "),s("p",[s("strong",[a._v("构造器依赖注入")]),a._v("：构造器依赖注入通过容器触发一个类的构造器来实现的，该类有一系列参数，每个参数代表一个对其他类的依赖。")]),a._v(" "),s("p",[s("strong",[a._v("Setter方法注入")]),a._v("：Setter方法注入是容器通过调用无参构造器或无参static工厂 方法实例化bean之后，调用该bean的setter方法，即实现了基于setter的依赖注入。")]),a._v(" "),s("h3",{attrs:{id:"构造器依赖注入和-setter方法注入的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造器依赖注入和-setter方法注入的区别"}},[a._v("#")]),a._v(" 构造器依赖注入和 Setter方法注入的区别")]),a._v(" "),s("h2",{attrs:{id:"spring事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring事务"}},[a._v("#")]),a._v(" Spring事务")]),a._v(" "),s("p",[a._v("Spring事务的本质其实就是数据库对事务的支持，没有数据库的事务支持，spring是无法提供事务功能的。")]),a._v(" "),s("h3",{attrs:{id:"spring-支持两种方式的事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-支持两种方式的事务管理"}},[a._v("#")]),a._v(" Spring 支持两种方式的事务管理")]),a._v(" "),s("h4",{attrs:{id:"_1-编程式事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-编程式事务管理"}},[a._v("#")]),a._v(" 1）编程式事务管理")]),a._v(" "),s("p",[a._v("通过 "),s("code",[a._v("TransactionTemplate")]),a._v("或者"),s("code",[a._v("TransactionManager")]),a._v("手动管理事务，实际应用中很少使用，但是对于你理解 Spring 事务管理原理有帮助。")]),a._v(" "),s("p",[a._v("使用"),s("code",[a._v("TransactionTemplate")]),a._v(" 进行编程式事务管理的示例代码如下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionTemplate")]),a._v(" transactionTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("testTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n        transactionTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionCallbackWithoutResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("doInTransactionWithoutResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),a._v(" transactionStatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ....  业务代码")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//回滚")]),a._v("\n                    transactionStatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setRollbackOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("使用 "),s("code",[a._v("TransactionManager")]),a._v(" 进行编程式事务管理的示例代码如下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PlatformTransactionManager")]),a._v(" transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("testTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),a._v(" status "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultTransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ....  业务代码")]),a._v("\n              transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n              transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rollback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("h4",{attrs:{id:"_2-声明式事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-声明式事务管理"}},[a._v("#")]),a._v(" 2）声明式事务管理")]),a._v(" "),s("p",[a._v("推荐使用（代码侵入性最小），实际是通过 AOP 实现（基于"),s("code",[a._v("@Transactional")]),a._v(" 的全注解方式使用最多）。")]),a._v(" "),s("p",[a._v("使用 "),s("code",[a._v("@Transactional")]),a._v("注解进行事务管理的示例代码如下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" aMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("C")]),a._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("C")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h3",{attrs:{id:"spring-事务管理接口介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-事务管理接口介绍"}},[a._v("#")]),a._v(" Spring 事务管理接口介绍")]),a._v(" "),s("p",[a._v("Spring 框架中，事务管理相关最重要的 3 个接口如下：")]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("PlatformTransactionManager")])]),a._v("： （平台）事务管理器，Spring 事务策略的核心。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition")])]),a._v("： 事务定义信息(事务隔离级别、传播行为、超时、只读、回滚规则)。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionStatus")])]),a._v("： 事务运行状态。")])]),a._v(" "),s("p",[s("strong",[s("code",[a._v("PlatformTransactionManager")])]),a._v(" 会根据 "),s("strong",[s("code",[a._v("TransactionDefinition")])]),a._v(" 的定义比如事务超时时间、隔离级别、传播行为等来进行事务管理 ，而 "),s("strong",[s("code",[a._v("TransactionStatus")])]),a._v(" 接口则提供了一些方法来获取事务相应的状态比如是否新事务、是否可以回滚等等。")]),a._v(" "),s("h4",{attrs:{id:"platformtransactionmanager-事务管理接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#platformtransactionmanager-事务管理接口"}},[a._v("#")]),a._v(" PlatformTransactionManager：事务管理接口")]),a._v(" "),s("p",[s("strong",[a._v("Spring 并不直接管理事务，而是提供了多种事务管理器")]),a._v(" 。Spring 事务管理器的接口是： "),s("strong",[s("code",[a._v("PlatformTransactionManager")])]),a._v(" 。")]),a._v(" "),s("p",[a._v("通过这个接口，Spring 为各个平台如 JDBC("),s("code",[a._v("DataSourceTransactionManager")]),a._v(")、Hibernate("),s("code",[a._v("HibernateTransactionManager")]),a._v(")、JPA("),s("code",[a._v("JpaTransactionManager")]),a._v(")等都提供了对应的事务管理器，但是具体的实现就是各个平台自己的事情了。")]),a._v(" "),s("p",[s("code",[a._v("PlatformTransactionManager")]),a._v("接口中定义了三个方法：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Nullable")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PlatformTransactionManager")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获得事务")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),a._v(" var1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//提交事务")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),a._v(" var1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//回滚事务")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rollback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),a._v(" var1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[s("strong",[a._v("为什么要定义或者说抽象出来"),s("code",[a._v("PlatformTransactionManager")]),a._v("这个接口呢？")])]),a._v(" "),s("p",[a._v("主要是因为要将事务管理行为抽象出来，然后不同的平台去实现它，这样我们可以保证提供给外部的行为不变，方便我们扩展。")]),a._v(" "),s("h4",{attrs:{id:"transactiondefinition-事务属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactiondefinition-事务属性"}},[a._v("#")]),a._v(" TransactionDefinition:事务属性")]),a._v(" "),s("p",[a._v("事务管理器接口 "),s("strong",[s("code",[a._v("PlatformTransactionManager")])]),a._v(" 通过 "),s("strong",[s("code",[a._v("getTransaction(TransactionDefinition definition)")])]),a._v(" 方法来得到一个事务，这个方法里面的参数是 "),s("strong",[s("code",[a._v("TransactionDefinition")])]),a._v(" 类 ，这个类就定义了一些基本的事务属性。")]),a._v(" "),s("p",[a._v("那么什么是 "),s("strong",[a._v("事务属性")]),a._v(" 呢？")]),a._v(" "),s("p",[a._v("事务属性可以理解成事务的一些基本配置，描述了事务策略如何应用到方法上。")]),a._v(" "),s("p",[a._v("事务属性包含了 5 个方面：")]),a._v(" "),s("ul",[s("li",[a._v("隔离级别")]),a._v(" "),s("li",[a._v("传播行为")]),a._v(" "),s("li",[a._v("回滚规则")]),a._v(" "),s("li",[a._v("是否只读")]),a._v(" "),s("li",[a._v("事务超时")])]),a._v(" "),s("h4",{attrs:{id:"transactionstatus-事务状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactionstatus-事务状态"}},[a._v("#")]),a._v(" TransactionStatus:事务状态")]),a._v(" "),s("p",[s("code",[a._v("TransactionStatus")]),a._v("接口用来记录事务的状态 该接口定义了一组方法,用来获取或判断事务的相应状态信息。")]),a._v(" "),s("p",[s("code",[a._v("PlatformTransactionManager.getTransaction(…)")]),a._v("方法返回一个 "),s("code",[a._v("TransactionStatus")]),a._v(" 对象。")]),a._v(" "),s("p",[s("strong",[a._v("TransactionStatus 接口接口内容如下：")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNewTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 是否是新的事务")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hasSavepoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 是否有恢复点")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setRollbackOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 设置为只回滚")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isRollbackOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 是否为只回滚")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" isCompleted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 是否已完成")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"事务属性详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务属性详解"}},[a._v("#")]),a._v(" 事务属性详解")]),a._v(" "),s("h4",{attrs:{id:"事务传播行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务传播行为"}},[a._v("#")]),a._v(" 事务传播行为")]),a._v(" "),s("p",[s("strong",[a._v("事务传播行为是为了解决业务层方法之间互相调用的事务问题")]),a._v("。")]),a._v(" "),s("p",[a._v("当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。")]),a._v(" "),s("p",[s("strong",[a._v("举个例子！")])]),a._v(" "),s("p",[a._v("我们在 A 类的"),s("code",[a._v("aMethod（）")]),a._v("方法中调用了 B 类的 "),s("code",[a._v("bMethod()")]),a._v(" 方法。这个时候就涉及到业务层方法之间互相调用的事务问题。如果我们的 "),s("code",[a._v("bMethod()")]),a._v("如果发生异常需要回滚，如何配置事务传播行为才能让 "),s("code",[a._v("aMethod()")]),a._v("也跟着回滚呢？")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" aMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" bMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("在"),s("code",[a._v("TransactionDefinition")]),a._v("定义中包括了如下几个表示传播行为的常量：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_SUPPORTS")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_MANDATORY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRES_NEW")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NOT_SUPPORTED")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NEVER")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NESTED")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("p",[a._v("不过如此，为了方便使用，Spring 会相应地定义了一个枚举类："),s("code",[a._v("Propagation")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("transaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("annotation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("transaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Propagation")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// （默认值）如果当前存在事务，就加入该事务，如果当前没有事务，就创建一个新事务，（该设置是最常用的设置）。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("SUPPORTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_SUPPORTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("MANDATORY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_MANDATORY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建新事务，无论当前存不存在事务，都创建新事务。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("REQUIRES_NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRES_NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("NOT_SUPPORTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NOT_SUPPORTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 以非事务方式执行，如果当前存在事务，则抛出异常。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("NEVER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NEVER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则按REQUIRED属性执行。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("NESTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NESTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Propagation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br")])]),s("h5",{attrs:{id:"_1-transactiondefinition-propagation-required"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-transactiondefinition-propagation-required"}},[a._v("#")]),a._v(" "),s("strong",[s("code",[a._v("1.TransactionDefinition.PROPAGATION_REQUIRED")])])]),a._v(" "),s("p",[a._v("使用的最多的一个事务传播行为，我们平时经常使用的"),s("code",[a._v("@Transactional")]),a._v("注解默认使用就是这个事务传播行为。如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。也就是说：")]),a._v(" "),s("ol",[s("li",[a._v("如果外部方法没有开启事务的话，"),s("code",[a._v("Propagation.REQUIRED")]),a._v("修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。")]),a._v(" "),s("li",[a._v("如果外部方法开启事务并且被"),s("code",[a._v("Propagation.REQUIRED")]),a._v("的话，所有"),s("code",[a._v("Propagation.REQUIRED")]),a._v("修饰的内部方法和外部方法均属于同一事务 ，只要一个方法回滚，整个事务均回滚。")])]),a._v(" "),s("p",[a._v("举个例子：如果我们上面的"),s("code",[a._v("aMethod()")]),a._v("和"),s("code",[a._v("bMethod()")]),a._v("使用的都是"),s("code",[a._v("PROPAGATION_REQUIRED")]),a._v("传播行为的话，两者使用的就是同一个事务，只要其中一个方法回滚，整个事务均回滚。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" aMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" bMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("h5",{attrs:{id:"_2-transactiondefinition-propagation-requires-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-transactiondefinition-propagation-requires-new"}},[a._v("#")]),a._v(" "),s("strong",[s("code",[a._v("2.TransactionDefinition.PROPAGATION_REQUIRES_NEW")])])]),a._v(" "),s("p",[a._v("创建一个新的事务，如果当前存在事务，则把当前事务挂起。也就是说不管外部方法是否开启事务，"),s("code",[a._v("Propagation.REQUIRES_NEW")]),a._v("修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。")]),a._v(" "),s("p",[a._v("举个例子：如果我们上面的"),s("code",[a._v("bMethod()")]),a._v("使用"),s("code",[a._v("PROPAGATION_REQUIRES_NEW")]),a._v("事务传播行为修饰，"),s("code",[a._v("aMethod")]),a._v("还是用"),s("code",[a._v("PROPAGATION_REQUIRED")]),a._v("修饰的话。如果"),s("code",[a._v("aMethod()")]),a._v("发生异常回滚，"),s("code",[a._v("bMethod()")]),a._v("不会跟着回滚，因为 "),s("code",[a._v("bMethod()")]),a._v("开启了独立的事务。但是，如果 "),s("code",[a._v("bMethod()")]),a._v("抛出了未被捕获的异常并且这个异常满足事务回滚规则的话,"),s("code",[a._v("aMethod()")]),a._v("同样也会回滚，因为这个异常被 "),s("code",[a._v("aMethod()")]),a._v("的事务管理机制检测到了。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" aMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("REQUIRES_NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" bMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("h5",{attrs:{id:"_3-transactiondefinition-propagation-nested"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-transactiondefinition-propagation-nested"}},[a._v("#")]),a._v(" "),s("strong",[a._v("3."),s("code",[a._v("TransactionDefinition.PROPAGATION_NESTED")])]),a._v(":")]),a._v(" "),s("p",[a._v("如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于"),s("code",[a._v("TransactionDefinition.PROPAGATION_REQUIRED")]),a._v("。也就是说：")]),a._v(" "),s("ol",[s("li",[a._v("在外部方法未开启事务的情况下"),s("code",[a._v("Propagation.NESTED")]),a._v("和"),s("code",[a._v("Propagation.REQUIRED")]),a._v("作用相同，修饰的内部方法都会新开启自己的事务，且开启的事务相互独立，互不干扰。")]),a._v(" "),s("li",[a._v("如果外部方法开启事务的话，"),s("code",[a._v("Propagation.NESTED")]),a._v("修饰的内部方法属于外部事务的子事务，外部主事务回滚的话，子事务也会回滚，而内部子事务可以单独回滚而不影响外部主事务和其他子事务。")])]),a._v(" "),s("p",[a._v("这里还是简单举个例子：")]),a._v(" "),s("p",[a._v("如果 "),s("code",[a._v("aMethod()")]),a._v(" 回滚的话，"),s("code",[a._v("bMethod()")]),a._v("和"),s("code",[a._v("bMethod2()")]),a._v("都要回滚，而"),s("code",[a._v("bMethod()")]),a._v("回滚的话，并不会造成 "),s("code",[a._v("aMethod()")]),a._v(" 和"),s("code",[a._v("bMethod()2")]),a._v("回滚。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_REQUIRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" aMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bMethod2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NESTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" bMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("propagation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PROPAGATION_NESTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" bMethod2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("h5",{attrs:{id:"transactiondefinition-propagation-mandatory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactiondefinition-propagation-mandatory"}},[a._v("#")]),a._v(" "),s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_MANDATORY")])])]),a._v(" "),s("p",[a._v("如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。（mandatory：强制性）")]),a._v(" "),s("p",[a._v("这个使用的很少，就不举例子来说了。")]),a._v(" "),s("p",[s("strong",[a._v("若是错误的配置以下 3 种事务传播行为，事务将不会发生回滚，这里不对照案例讲解了，使用的很少。")])]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_SUPPORTS")])]),a._v(": 如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_NOT_SUPPORTED")])]),a._v(": 以非事务方式运行，如果当前存在事务，则把当前事务挂起。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_NEVER")])]),a._v(": 以非事务方式运行，如果当前存在事务，则抛出异常。")])]),a._v(" "),s("p",[a._v("更多关于事务传播行为的内容请看这篇文章："),s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486668&idx=2&sn=0381e8c836442f46bdc5367170234abb&chksm=cea24307f9d5ca11c96943b3ccfa1fc70dc97dd87d9c540388581f8fe6d805ff548dff5f6b5b&token=1776990505&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("《太难了~面试官让我结合案例讲讲自己对 Spring 事务传播行为的理解。》"),s("OutboundLink")],1)]),a._v(" "),s("h4",{attrs:{id:"事务的隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离级别"}},[a._v("#")]),a._v(" 事务的隔离级别")]),a._v(" "),s("p",[s("code",[a._v("TransactionDefinition")]),a._v(" 接口中定义了五个表示隔离级别的常量：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_DEFAULT")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_READ_UNCOMMITTED")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_READ_COMMITTED")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_REPEATABLE_READ")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_SERIALIZABLE")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("和事务传播行为这块一样，为了方便使用，Spring 也相应地定义了一个枚举类："),s("code",[a._v("Isolation")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("DEFAULT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_DEFAULT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_UNCOMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_READ_UNCOMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_COMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_READ_COMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("REPEATABLE_READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_REPEATABLE_READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("SERIALIZABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ISOLATION_SERIALIZABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br")])]),s("p",[a._v("下面我依次对每一种事务隔离级别进行介绍：")]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_DEFAULT")])]),a._v(" :使用后端数据库默认的隔离级别，MySQL 默认采用的 "),s("code",[a._v("REPEATABLE_READ")]),a._v(" 隔离级别 Oracle 默认采用的 "),s("code",[a._v("READ_COMMITTED")]),a._v(" 隔离级别.")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_READ_UNCOMMITTED")])]),a._v(" :最低的隔离级别，使用这个隔离级别很少，因为它允许读取尚未提交的数据变更，"),s("strong",[a._v("可能会导致脏读、幻读或不可重复读")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_READ_COMMITTED")])]),a._v(" : 允许读取并发事务已经提交的数据，"),s("strong",[a._v("可以阻止脏读，但是幻读或不可重复读仍有可能发生")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_REPEATABLE_READ")])]),a._v(" : 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，"),s("strong",[a._v("可以阻止脏读和不可重复读，但幻读仍有可能发生。")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_SERIALIZABLE")])]),a._v(" : 最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，"),s("strong",[a._v("该级别可以防止脏读、不可重复读以及幻读")]),a._v("。但是这将严重影响程序的性能。通常情况下也不会用到该级别。")])]),a._v(" "),s("h4",{attrs:{id:"事务的超时属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务的超时属性"}},[a._v("#")]),a._v(" 事务的超时属性")]),a._v(" "),s("p",[a._v("所谓事务超时，就是指一个事务所允许执行的最长时间，如果超过该时间限制但事务还没有完成，则自动回滚事务。在 "),s("code",[a._v("TransactionDefinition")]),a._v(" 中以 int 的值来表示超时时间，其单位是秒，默认值为-1。")]),a._v(" "),s("h4",{attrs:{id:"事务的只读属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务的只读属性"}},[a._v("#")]),a._v(" 事务的只读属性")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Nullable")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 返回是否为只读事务，默认值为 false")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isReadOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("p",[a._v("对于只有读取数据查询的事务，可以指定事务类型为 readonly，即只读事务。只读事务不涉及数据的修改，数据库会提供一些优化手段，适合用在有多条数据库查询操作的方法中。")]),a._v(" "),s("p",[a._v("拿 MySQL 的 innodb 举例子，根据官网 https://dev.mysql.com/doc/refman/5.7/en/innodb-autocommit-commit-rollback.html 描述：")]),a._v(" "),s("blockquote",[s("p",[a._v("MySQL 默认对每一个新建立的连接都启用了"),s("code",[a._v("autocommit")]),a._v("模式。在该模式下，每一个发送到 MySQL 服务器的"),s("code",[a._v("sql")]),a._v("语句都会在一个单独的事务中进行处理，执行结束后会自动提交事务，并开启一个新的事务。")])]),a._v(" "),s("p",[a._v("但是，如果你给方法加上了"),s("code",[a._v("Transactional")]),a._v("注解的话，这个方法执行的所有"),s("code",[a._v("sql")]),a._v("会被放在一个事务中。如果声明了只读事务的话，数据库就会去优化它的执行，并不会带来其他的什么收益。")]),a._v(" "),s("p",[a._v("如果不加"),s("code",[a._v("Transactional")]),a._v("，每条"),s("code",[a._v("sql")]),a._v("会开启一个单独的事务，中间被其它事务改了数据，都会实时读取到最新值。")]),a._v(" "),s("p",[a._v("分享一下关于事务只读属性，其他人的解答：")]),a._v(" "),s("ol",[s("li",[a._v("如果你一次执行单条查询语句，则没有必要启用事务支持，数据库默认支持 SQL 执行期间的读一致性；")]),a._v(" "),s("li",[a._v("如果你一次执行多条查询语句，例如统计查询，报表查询，在这种场景下，多条查询 SQL 必须保证整体的读一致性，否则，在前条 SQL 查询之后，后条 SQL 查询之前，数据被其他用户改变，则该次整体的统计查询将会出现读数据不一致的状态，此时，应该启用事务支持")])]),a._v(" "),s("h4",{attrs:{id:"事务回滚规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务回滚规则"}},[a._v("#")]),a._v(" 事务回滚规则")]),a._v(" "),s("p",[a._v("这些规则定义了哪些异常会导致事务回滚而哪些不会。默认情况下，事务只有遇到运行期异常（RuntimeException 的子类）时才会回滚，Error 也会导致事务回滚，但是，在遇到检查型（Checked）异常时不会回滚。")]),a._v(" "),s("p",[a._v("如果你想要回滚你定义的特定的异常类型的话，可以这样：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("rollbackFor"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"transactional-注解使用详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-注解使用详解"}},[a._v("#")]),a._v(" @Transactional 注解使用详解")]),a._v(" "),s("h4",{attrs:{id:"transactional-的作用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-的作用范围"}},[a._v("#")]),a._v(" @Transactional 的作用范围")]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("方法")]),a._v(" ：推荐将注解使用于方法上，不过需要注意的是："),s("strong",[a._v("该注解只能应用到 public 方法上，否则不生效。")])]),a._v(" "),s("li",[s("strong",[a._v("类")]),a._v(" ：如果这个注解使用在类上的话，表明该注解对该类中所有的 public 方法都生效。")]),a._v(" "),s("li",[s("strong",[a._v("接口")]),a._v(" ：不推荐在接口上使用。")])]),a._v(" "),s("h4",{attrs:{id:"transactional-的常用配置参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-的常用配置参数"}},[a._v("#")]),a._v(" @Transactional 的常用配置参数")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("@Transactional")]),a._v(" 的常用配置参数总结（只列巨额 5 个平时比较常用的）：")])]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("属性名")]),a._v(" "),s("th",[a._v("说明")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("propagation")]),a._v(" "),s("td",[a._v("事务的传播行为，默认值为 REQUIRED，可选的值在上面介绍过")])]),a._v(" "),s("tr",[s("td",[a._v("isolation")]),a._v(" "),s("td",[a._v("事务的隔离级别，默认值采用 DEFAULT，可选的值在上面介绍过")])]),a._v(" "),s("tr",[s("td",[a._v("timeout")]),a._v(" "),s("td",[a._v("事务的超时时间，默认值为-1（不会超时）。如果超过该时间限制但事务还没有完成，则自动回滚事务。")])]),a._v(" "),s("tr",[s("td",[a._v("readOnly")]),a._v(" "),s("td",[a._v("指定事务是否为只读事务，默认值为 false。")])]),a._v(" "),s("tr",[s("td",[a._v("rollbackFor")]),a._v(" "),s("td",[a._v("用于指定能够触发事务回滚的异常类型，并且可以指定多个异常类型。")])])])]),a._v(" "),s("h4",{attrs:{id:"transactional-事务注解原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-事务注解原理"}},[a._v("#")]),a._v(" @Transactional 事务注解原理")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("@Transactional")]),a._v(" 的工作机制是基于 AOP 实现的，AOP 又是使用动态代理实现的。如果目标对象实现了接口，默认情况下会采用 JDK 的动态代理，如果目标对象没有实现了接口,会使用 CGLIB 动态代理。")])]),a._v(" "),s("p",[a._v("如果一个类或者一个类中的 public 方法上被标注"),s("code",[a._v("@Transactional")]),a._v(" 注解的话，Spring 容器就会在启动的时候为其创建一个代理类，在调用被"),s("code",[a._v("@Transactional")]),a._v(" 注解的 public 方法的时候，实际调用的是，"),s("code",[a._v("TransactionInterceptor")]),a._v(" 类中的 "),s("code",[a._v("invoke()")]),a._v("方法。这个方法的作用就是在目标方法之前开启事务，方法执行过程中如果遇到异常的时候回滚事务，方法调用完成之后提交事务。")]),a._v(" "),s("h4",{attrs:{id:"spring-aop-自调用问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop-自调用问题"}},[a._v("#")]),a._v(" "),s("strong",[a._v("Spring AOP 自调用问题")])]),a._v(" "),s("p",[s("strong",[a._v("若同一类中的其他没有 "),s("code",[a._v("@Transactional")]),a._v(" 注解的方法内部调用有 "),s("code",[a._v("@Transactional")]),a._v(" 注解的方法，有"),s("code",[a._v("@Transactional")]),a._v(" 注解的方法的事务会失效。")])]),a._v(" "),s("p",[a._v("这是由于"),s("code",[a._v("Spring AOP")]),a._v("代理的原因造成的，因为只有当 "),s("code",[a._v("@Transactional")]),a._v(" 注解的方法在类以外被调用的时候，Spring 事务管理才生效。")]),a._v(" "),s("p",[s("code",[a._v("MyService")]),a._v(" 类中的"),s("code",[a._v("method1()")]),a._v("调用"),s("code",[a._v("method2()")]),a._v("就会导致"),s("code",[a._v("method2()")]),a._v("的事务失效。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Service")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("method1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("method2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//......")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("method2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//......")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("解决办法就是避免同一类中自调用或者使用 AspectJ 取代 Spring AOP 代理。")]),a._v(" "),s("h4",{attrs:{id:"transactional-的使用注意事项总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-的使用注意事项总结"}},[a._v("#")]),a._v(" "),s("code",[a._v("@Transactional")]),a._v(" 的使用注意事项总结")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("@Transactional")]),a._v(" 注解只有作用到 public 方法上事务才生效，不推荐在接口上使用；")]),a._v(" "),s("li",[a._v("避免同一个类中调用 "),s("code",[a._v("@Transactional")]),a._v(" 注解的方法，这样会导致事务失效；")]),a._v(" "),s("li",[a._v("正确的设置 "),s("code",[a._v("@Transactional")]),a._v(" 的 rollbackFor 和 "),s("code",[a._v("propagation")]),a._v(" 属性，否则事务可能会回滚失败")])]),a._v(" "),s("h3",{attrs:{id:"transactional-rollbackfor-exception-class-注解了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-rollbackfor-exception-class-注解了解吗"}},[a._v("#")]),a._v(" "),s("a",{attrs:{href:"https://snailclimb.gitee.io/javaguide/#/docs/system-design/framework/spring/Spring%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93?id=transactionalrollbackfor-exceptionclass%E6%B3%A8%E8%A7%A3%E4%BA%86%E8%A7%A3%E5%90%97%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[a._v("@Transactional(rollbackFor = Exception.class)注解了解吗？"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("code",[a._v("Exception")]),a._v(" 分为运行时异常 "),s("code",[a._v("RuntimeException")]),a._v(" 和非运行时异常。事务管理对于企业应用来说是至关重要的，即使出现异常情况，它也可以保证数据的一致性。")]),a._v(" "),s("p",[a._v("当 "),s("code",[a._v("@Transactional")]),a._v(" 注解作用于类上时，该类的所有 public 方法将都具有该类型的事务属性，同时，我们也可以在方法级别使用该标注来覆盖类级别的定义。如果类或者方法加了这个注解，那么这个类里面的方法抛出异常，就会回滚，数据库里面的数据也会回滚。")]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("@Transactional")]),a._v(" 注解中如果不配置"),s("code",[a._v("rollbackFor")]),a._v("属性,那么事务只会在遇到"),s("code",[a._v("RuntimeException")]),a._v("的时候才会回滚，加上 "),s("code",[a._v("rollbackFor=Exception.class")]),a._v(",可以让事务在遇到非运行时异常时也回滚。")]),a._v(" "),s("h2",{attrs:{id:"spring-框架中用到了哪些设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-框架中用到了哪些设计模式"}},[a._v("#")]),a._v(" Spring 框架中用到了哪些设计模式？")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("工厂模式")]),a._v(" : Spring 使用工厂模式通过 "),s("code",[a._v("BeanFactory")]),a._v("、"),s("code",[a._v("ApplicationContext")]),a._v(" 创建 bean 对象。")]),a._v(" "),s("li",[s("strong",[a._v("代理模式")]),a._v(" : Spring AOP 功能的实现。")]),a._v(" "),s("li",[s("strong",[a._v("单例模式")]),a._v(" : Spring 中的 Bean 默认都是单例的。")]),a._v(" "),s("li",[s("strong",[a._v("模板模式")]),a._v(" : Spring 中 "),s("code",[a._v("jdbcTemplate")]),a._v("、"),s("code",[a._v("hibernateTemplate")]),a._v(" 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。")]),a._v(" "),s("li",[s("strong",[a._v("包装器模式")]),a._v(" : 我们的项目需要连接多个数据库，而且不同的客户在每次访问中根据需要会去访问不同的数据库。这种模式让我们可以根据客户的需求能够动态切换不同的数据源。")]),a._v(" "),s("li",[s("strong",[a._v("观察者模式:")]),a._v(" Spring 事件驱动模型就是观察者模式很经典的一个应用。")]),a._v(" "),s("li",[s("strong",[a._v("适配器模式")]),a._v(" : Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配"),s("code",[a._v("Controller")]),a._v("。")])]),a._v(" "),s("p",[a._v("参看："),s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247485303&idx=1&sn=9e4626a1e3f001f9b0d84a6fa0cff04a&chksm=cea248bcf9d5c1aaf48b67cc52bac74eb29d6037848d6cf213b0e5466f2d1fda970db700ba41&token=255050878&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("面试官:“谈谈Spring中都用到了那些设计模式?”"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_55932383/article/details/120088647?utm_source=app&app_version=4.14.0&code=app_1562916241&uLinkId=usr1mkqgl919blen",target:"_blank",rel:"noopener noreferrer"}},[a._v("【spring大总结】希望所有看完这篇文章的C友，都能快速入门spring"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/369115360",target:"_blank",rel:"noopener noreferrer"}},[a._v("Spring面试题（2021最新版）"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://snailclimb.gitee.io/javaguide/#/docs/system-design/framework/spring/Spring%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaGuide-Spring常见问题总结"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/368769721",target:"_blank",rel:"noopener noreferrer"}},[a._v("面试题系列：Spring 夺命连环10问"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/311373740",target:"_blank",rel:"noopener noreferrer"}},[a._v("面试必问的 Spring，你懂了吗？"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/ad05cfe7868e",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Spring》IOC实现原理"),s("OutboundLink")],1),a._v(" （依赖倒置、控制反转、依赖注入思想上分析）")]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/38484238",target:"_blank",rel:"noopener noreferrer"}},[a._v("什么才叫懂Spring底层原理，这些面试题你都会吗"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);