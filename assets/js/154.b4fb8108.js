(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{581:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("作者：duktig")]),s._v(" "),t("p",[s._v("博客："),t("a",{attrs:{href:"https://duktig.cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://duktig.cn"),t("OutboundLink")],1),s._v("  （文章首发）")]),s._v(" "),t("p",[s._v("优秀还努力。愿你付出甘之如饴，所得归于欢喜。")]),s._v(" "),t("p",[s._v("更多文章参看github知识库："),t("a",{attrs:{href:"https://github.com/duktig666/knowledge",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/duktig666/knowledge"),t("OutboundLink")],1)])]),s._v(" "),t("h1",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),t("p",[s._v("学习完Hadoop，有没有感到编写一个MapReduce程序非常复杂，想要进行一次分析和统计需要很大的开发成本。那么不如就来了解了解Hadoop生态圈的另一名成员——Hive。让我们一起来了解，如何使用类SQL语言进行快速查询和分析数据吧。")]),s._v(" "),t("p",[s._v("前边文章我们了解了Hive的概述、DDL语句和"),t("strong",[s._v("DML语句（重点）")]),s._v("、分桶表和分区表，这篇文章主要了解Hive的常用函数和压缩存储。")]),s._v(" "),t("p",[s._v("Hive系列文章如下：")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/121096763?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[s._v("大数据基础之Hive（一）—— Hive概述"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/121096833?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[s._v("大数据基础之Hive（二）—— DDL语句和DML语句"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/121096891?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[s._v("大数据基础之Hive（三）—— 分区表和分桶表"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/121096983?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[s._v("大数据基础之Hive（四）—— 常用函数和压缩存储"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42937522/article/details/121097029",target:"_blank",rel:"noopener noreferrer"}},[s._v("大数据基础之Hive（五）——Hive实战（统计电影排名的各种问题）"),t("OutboundLink")],1)])]),s._v(" "),t("h1",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),t("h2",{attrs:{id:"系统内置函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统内置函数"}},[s._v("#")]),s._v(" 系统内置函数")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统自带的函数 ")]),s._v("\nshow functions"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示自带的函数的用法 ")]),s._v("\ndesc "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" upper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 详细显示自带的函数的用法 ")]),s._v("\ndesc "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" extended upper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"常用内置函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用内置函数"}},[s._v("#")]),s._v(" 常用内置函数")]),s._v(" "),t("h3",{attrs:{id:"空字段赋值-nvl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空字段赋值-nvl"}},[s._v("#")]),s._v(" 空字段赋值 NVL")]),s._v(" "),t("p",[s._v("NVL：给值为 NULL 的数据赋值，它的格式是 NVL( value，default_value)。")]),s._v(" "),t("p",[s._v("它的功能是"),t("strong",[s._v("如果value 为 NULL，则NVL 函数返回default_value 的值，否则返回 value 的值")]),s._v("，如果两个参数都为NULL ，则返回NULL。")]),s._v(" "),t("h3",{attrs:{id:"case-when-then-else-end"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-when-then-else-end"}},[s._v("#")]),s._v(" CASE WHEN THEN ELSE END")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp_sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \nname string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  \ndept_id string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  \nsex string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" format delimited "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fields")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("terminated")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \n  dept_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" sex "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" male_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" sex "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'女'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" female_count \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp_sex \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" dept_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"行转列-多个列拼接成一个列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行转列-多个列拼接成一个列"}},[s._v("#")]),s._v(" 行转列 （多个列拼接成一个列）")]),s._v(" "),t("h4",{attrs:{id:"函数说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数说明"}},[s._v("#")]),s._v(" 函数说明")]),s._v(" "),t("p",[t("code",[s._v("CONCAT(string A/col, string B/col…)")]),s._v("：返回输入字符串连接后的结果，支持任意个输入字符串;\n"),t("code",[s._v("CONCAT_WS(separator, str1, str2,...)")]),s._v("：它是一个特殊形式的 CONCAT()。第一个参数剩余参数间的分隔符。分隔符可以是与剩余参数一样的字符串。如果分隔符是 NULL，返回值也将为 NULL。这个函数会跳过分隔符参数后的任何 NULL 和空字符串。分隔符将被加到被连接的字符串之间;")]),s._v(" "),t("p",[t("code",[s._v("COLLECT_SET(col)")]),s._v("：函数只接受基本数据类型，它的主要作用是将某字段的值进行去重汇总，产生Array 类型字段。")]),s._v(" "),t("h4",{attrs:{id:"案例实操"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例实操"}},[s._v("#")]),s._v(" 案例实操")]),s._v(" "),t("p",[s._v("数据准备，COLLECT.txt:")]),s._v(" "),t("p",[s._v("字段：name constellation blood_type")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("孙悟空 白羊座 A\n大海 射手座 A\n宋宋 白羊座 B\n猪八戒 白羊座 A\n凤姐 射手座 A\n苍老师 白羊座 B\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("需求，把星座和血型一样的人归类到一起。结果如下：")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("射手座,A 大海|凤姐 \n白羊座,A 孙悟空|猪八戒 \n白羊座,B 宋宋|苍老师 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("创建 hive 表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" person_info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \nname string "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'名字'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  \nconstellation string "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'星座'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  \nblood_type string "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'血型'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" format delimited "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fields")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("terminated")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("导入数据")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("load data "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" inpath "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./person_info.txt"')]),s._v(" into table person_info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("按需求查询数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \nt1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c_b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \nCONCAT_WS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"|"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("collect_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \nNAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \nCONCAT_WS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("constellation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("blood_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" c_b \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person_info \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("t1 \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c_b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"列转行-一个行转成多个行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列转行-一个行转成多个行"}},[s._v("#")]),s._v(" 列转行 （一个行转成多个行）")]),s._v(" "),t("h4",{attrs:{id:"函数说明-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数说明-2"}},[s._v("#")]),s._v(" 函数说明")]),s._v(" "),t("p",[t("code",[s._v("EXPLODE(col)")]),s._v("：将hive 一列中复杂的 Array 或者 Map 结构拆分成多行")]),s._v(" "),t("p",[t("code",[s._v("LATERAL VIEW")]),s._v("：用于和 split, explode 等UDTF 一起使用，它能够将一列数据拆成多行数据，在此基础上可以对拆分后的数据进行聚合。")]),s._v(" "),t("p",[s._v("用法：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("LATERAL "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" udtf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" tableAlias "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" columnAlias \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"实例操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例操作"}},[s._v("#")]),s._v(" 实例操作")]),s._v(" "),t("p",[s._v("创建本地 movie.txt")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("《疑犯追踪》\t悬疑,动作,科幻,剧情 \n《Lie to me》\t悬疑,警匪,动作,心理,剧情 \n《战狼 2》\t\t战争,动作,灾难 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("需求：")]),s._v(" "),t("p",[s._v("将电影分类中的数组数据展开。结果如下：")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("《疑犯追踪》      悬疑 \n《疑犯追踪》      动作 \n《疑犯追踪》      科幻 \n《疑犯追踪》      剧情 \n《Lie to me》   悬疑 \n《Lie to me》   警匪 \n《Lie to me》   动作 \n《Lie to me》   心理 \n《Lie to me》   剧情 \n《战狼 2》 战争 \n《战狼 2》 动作 \n《战狼 2》 灾难 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("创建 hive 表并导入数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" movie_info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n    movie string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    category string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" format delimited "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fields")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("terminated")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("load")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" inpath "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./movie.txt"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" movie_info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("按需求查询数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \nmovie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \ncategory_name \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" \nmovie_info \nlateral "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" \nexplode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("split"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("category"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" movie_info_tmp  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" category_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"窗口函数-开窗函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#窗口函数-开窗函数"}},[s._v("#")]),s._v(" 窗口函数（开窗函数）*")]),s._v(" "),t("h4",{attrs:{id:"函数说明-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数说明-3"}},[s._v("#")]),s._v(" 函数说明：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("OVER()")]),s._v("：指定分析函数工作的数据窗口大小，这个数据窗口大小可能会随着行的变而变化。\n"),t("ul",[t("li",[t("code",[s._v("CURRENT ROW")]),s._v("：当前行")]),s._v(" "),t("li",[t("code",[s._v("n PRECEDING")]),s._v("：往前n 行数据")]),s._v(" "),t("li",[t("code",[s._v("n FOLLOWING")]),s._v("：往后n 行数据")]),s._v(" "),t("li",[t("code",[s._v("UNBOUNDED")]),s._v("：起点，\n"),t("ul",[t("li",[t("code",[s._v("UNBOUNDED PRECEDING")]),s._v(" 表示从前面的起点，")]),s._v(" "),t("li",[t("code",[s._v("UNBOUNDED FOLLOWING")]),s._v(" 表示到后面的终点")])])])])]),s._v(" "),t("li",[t("code",[s._v("LAG(col,n,default_val)")]),s._v("：往前第n 行数据")]),s._v(" "),t("li",[t("code",[s._v("LEAD(col,n, default_val)")]),s._v("：往后第n 行数据")]),s._v(" "),t("li",[t("code",[s._v("NTILE(n)")]),s._v("：把有序窗口的行分发到指定数据的组中，各个组有编号，编号从 1 开始，对于每一行，NTILE 返回此行所属的组的编号。注意：n 必须为int 类型。")])]),s._v(" "),t("h3",{attrs:{id:"rank"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rank"}},[s._v("#")]),s._v(" Rank")]),s._v(" "),t("h4",{attrs:{id:"函数说明-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数说明-4"}},[s._v("#")]),s._v(" 函数说明")]),s._v(" "),t("ul",[t("li",[s._v("RANK() 排序相同时会重复，总数不会变")]),s._v(" "),t("li",[s._v("DENSE_RANK() 排序相同时会重复，总数会减少")]),s._v(" "),t("li",[s._v("ROW_NUMBER() 会根据顺序计算")])]),s._v(" "),t("h3",{attrs:{id:"其他常用函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他常用函数"}},[s._v("#")]),s._v(" 其他常用函数")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("常用日期函数\nunix_timestamp:返回当前或指定时间的时间戳\t\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" unix_timestamp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" unix_timestamp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2020-10-28"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yyyy-MM-dd'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nfrom_unixtime：将时间戳转为日期格式\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" from_unixtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1603843200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ncurrent_date：当前日期\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" current_date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ncurrent_timestamp：当前的日期加时间\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" current_timestamp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nto_date：抽取日期部分\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" to_date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nyear：获取年\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" year"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmonth：获取月\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" month"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nday：获取日\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" day"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nhour：获取时\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" hour"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nminute：获取分\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" minute"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nsecond：获取秒\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nweekofyear：当前时间是一年中的第几周\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" weekofyear"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ndayofmonth：当前时间是一个月中的第几天\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" dayofmonth"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmonths_between： 两个日期间的月份\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" months_between"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-04-01'")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nadd_months：日期加减月\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" add_months"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28'")]),s._v(",-3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ndatediff：两个日期相差的天数\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" datediff"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-11-04'")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ndate_add：日期加天数\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" date_add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28'")]),s._v(",4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ndate_sub：日期减天数\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" date_sub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28'")]),s._v(",-4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlast_day：日期的当月的最后一天\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" last_day"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-02-30'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ndate_format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": 格式化日期\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" date_format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-10-28 12:12:12'")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yyyy/MM/dd HH:mm:ss'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n常用取整函数\nround： 四舍五入\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" round"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" round"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.54")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nceil：  向上取整\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ceil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ceil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.54")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nfloor： 向下取整\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" floor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" floor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.54")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n常用字符串操作函数\nupper： 转大写\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" upper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'low'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlower： 转小写\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lower"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'low'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlength： 长度\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"atguigu"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ntrim：  前后去空格\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" trim"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" atguigu "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlpad： 向左补齐，到指定长度\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lpad"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'atguigu'")]),s._v(",9,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'g'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nrpad：  向右补齐，到指定长度\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" rpad"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'atguigu'")]),s._v(",9,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'g'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nregexp_replace：使用正则表达式匹配目标字符串，匹配成功后替换！\nSELECT regexp_replace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020/10/25'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n集合操作\nsize： 集合中元素的个数\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("friends"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from test3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmap_keys： 返回map中的key\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" map_keys"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from test3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmap_values: 返回map中的value\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" map_values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from test3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\narray_contains: 判断array中是否包含某个元素\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" array_contains"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("friends,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bingbing'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from test3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nsort_array： 将array中的元素排序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sort_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("friends"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from test3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ngrouping_set:多维分析\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br")])]),t("h3",{attrs:{id:"自定义函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数"}},[s._v("#")]),s._v(" 自定义函数")]),s._v(" "),t("p",[s._v("Hive 自带了一些函数，比如：max/min 等，但是数量有限，自己可以通过自定义 UDF 来方便的扩展。")]),s._v(" "),t("p",[s._v("当Hive 提供的内置函数无法满足你的业务处理需要时，此时就可以考虑使用用户自定义函数（UDF：user-defined function）。")]),s._v(" "),t("p",[s._v("根据用户自定义函数类别分为以下三种：")]),s._v(" "),t("ul",[t("li",[s._v("UDF（User-Defined-Function） 一进一出")]),s._v(" "),t("li",[s._v("UDAF（User-Defined Aggregation Function）  聚集函数，多进一出 类似于：count/max/min")]),s._v(" "),t("li",[s._v("UDTF（User-Defined Table-Generating Functions） 一进多出   如lateral view explode()")])]),s._v(" "),t("p",[s._v("编程步骤：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("继承Hive 提供的类")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hadoop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hive"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("udf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("generic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("GenericUDF")]),s._v(" \n "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hadoop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hive"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("udf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("generic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("GenericUDTF")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("实现类中的抽象方法")])]),s._v(" "),t("li",[t("p",[s._v("添加jar，或者将jar包放在hive的lib文件夹下重启")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" jar  xxx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("在hive 的命令行窗口创建函数")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("create "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("temporary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("dbname."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("function_name AS class_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("在hive 的命令行窗口删除函数")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("drop "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("temporary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("if exists"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("dbname."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("function_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h1",{attrs:{id:"压缩和存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#压缩和存储"}},[s._v("#")]),s._v(" 压缩和存储")]),s._v(" "),t("h2",{attrs:{id:"hadoop压缩配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hadoop压缩配置"}},[s._v("#")]),s._v(" Hadoop压缩配置")]),s._v(" "),t("h3",{attrs:{id:"mapreduce支持的压缩编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapreduce支持的压缩编码"}},[s._v("#")]),s._v(" MapReduce支持的压缩编码")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("压缩格式")]),s._v(" "),t("th",[s._v("Hadoop自带？")]),s._v(" "),t("th",[s._v("算法")]),s._v(" "),t("th",[s._v("文件扩展名")]),s._v(" "),t("th",[s._v("是否可切片")]),s._v(" "),t("th",[s._v("换成压缩格式后，原来的程序是否需要修改")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("DEFLATE")]),s._v(" "),t("td",[s._v("是，直接使用")]),s._v(" "),t("td",[s._v("DEFLATE")]),s._v(" "),t("td",[s._v(".deflate")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("和文本处理一样，不需要修改")])]),s._v(" "),t("tr",[t("td",[s._v("Gzip")]),s._v(" "),t("td",[s._v("是，直接使用")]),s._v(" "),t("td",[s._v("DEFLATE")]),s._v(" "),t("td",[s._v(".gz")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("和文本处理一样，不需要修改")])]),s._v(" "),t("tr",[t("td",[s._v("bzip2")]),s._v(" "),t("td",[s._v("是，直接使用")]),s._v(" "),t("td",[s._v("bzip2")]),s._v(" "),t("td",[s._v(".bz2")]),s._v(" "),t("td",[t("strong",[s._v("是")])]),s._v(" "),t("td",[s._v("和文本处理一样，不需要修改")])]),s._v(" "),t("tr",[t("td",[s._v("LZO")]),s._v(" "),t("td",[t("strong",[s._v("否，需要安装")])]),s._v(" "),t("td",[s._v("LZO")]),s._v(" "),t("td",[s._v(".lzo")]),s._v(" "),t("td",[t("strong",[s._v("是")])]),s._v(" "),t("td",[t("strong",[s._v("需要建索引，还需要指定输入格式")])])]),s._v(" "),t("tr",[t("td",[s._v("Snappy")]),s._v(" "),t("td",[s._v("是，直接使用")]),s._v(" "),t("td",[s._v("Snappy")]),s._v(" "),t("td",[s._v(".snappy")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("和文本处理一样，不需要修改")])])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("压缩算法")]),s._v(" "),t("th",[s._v("原始文件大小")]),s._v(" "),t("th",[s._v("压缩文件大小")]),s._v(" "),t("th",[s._v("压缩速度")]),s._v(" "),t("th",[s._v("解压速度")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("gzip")]),s._v(" "),t("td",[s._v("8.3GB")]),s._v(" "),t("td",[s._v("1.8GB")]),s._v(" "),t("td",[s._v("17.5MB/s")]),s._v(" "),t("td",[s._v("58MB/s")])]),s._v(" "),t("tr",[t("td",[s._v("bzip2")]),s._v(" "),t("td",[s._v("8.3GB")]),s._v(" "),t("td",[s._v("1.1GB")]),s._v(" "),t("td",[s._v("2.4MB/s")]),s._v(" "),t("td",[s._v("9.5MB/s")])]),s._v(" "),t("tr",[t("td",[s._v("LZO")]),s._v(" "),t("td",[s._v("8.3GB")]),s._v(" "),t("td",[s._v("2.9GB")]),s._v(" "),t("td",[s._v("49.3MB/s")]),s._v(" "),t("td",[s._v("74.6MB/s")])])])]),s._v(" "),t("p",[s._v("为了支持多种压缩/解压缩算法，Hadoop引入了编码/解码器")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("压缩格式")]),s._v(" "),t("th",[s._v("对应的编码/解码器")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("DEFLATE")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.DefaultCodec")])]),s._v(" "),t("tr",[t("td",[s._v("gzip")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.GzipCodec")])]),s._v(" "),t("tr",[t("td",[s._v("bzip2")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.BZip2Codec")])]),s._v(" "),t("tr",[t("td",[s._v("LZO")]),s._v(" "),t("td",[s._v("com.hadoop.compression.lzo.LzopCodec")])]),s._v(" "),t("tr",[t("td",[s._v("Snappy")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.SnappyCodec")])])])]),s._v(" "),t("p",[s._v("要在Hadoop中启用压缩，可以配置如下参数")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("参数")]),s._v(" "),t("th",[s._v("默认值")]),s._v(" "),t("th",[s._v("阶段")]),s._v(" "),t("th",[s._v("建议")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("io.compression.codecs    （在core-site.xml中配置）")]),s._v(" "),t("td",[s._v("无，这个需要在命令行输入hadoop checknative查看")]),s._v(" "),t("td",[s._v("输入压缩")]),s._v(" "),t("td",[s._v("Hadoop使用文件扩展名判断是否支持某种编解码器")])]),s._v(" "),t("tr",[t("td",[s._v("mapreduce.map.output.compress（在mapred-site.xml中配置）")]),s._v(" "),t("td",[s._v("false")]),s._v(" "),t("td",[s._v("mapper输出")]),s._v(" "),t("td",[s._v("这个参数设为true启用压缩")])]),s._v(" "),t("tr",[t("td",[s._v("mapreduce.map.output.compress.codec（在mapred-site.xml中配置）")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.DefaultCodec")]),s._v(" "),t("td",[s._v("mapper输出")]),s._v(" "),t("td",[s._v("企业多使用LZO或Snappy编解码器在此阶段压缩数据")])]),s._v(" "),t("tr",[t("td",[s._v("mapreduce.output.fileoutputformat.compress（在mapred-site.xml中配置）")]),s._v(" "),t("td",[s._v("false")]),s._v(" "),t("td",[s._v("reducer输出")]),s._v(" "),t("td",[s._v("这个参数设为true启用压缩")])]),s._v(" "),t("tr",[t("td",[s._v("mapreduce.output.fileoutputformat.compress.codec（在mapred-site.xml中配置）")]),s._v(" "),t("td",[s._v("org.apache.hadoop.io.compress.DefaultCodec")]),s._v(" "),t("td",[s._v("reducer输出")]),s._v(" "),t("td",[s._v("使用标准工具或者编解码器，如gzip和bzip2### 压缩的使用")])])])]),s._v(" "),t("h3",{attrs:{id:"开启-map-输出阶段压缩-mr-引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启-map-输出阶段压缩-mr-引擎"}},[s._v("#")]),s._v(" 开启 Map 输出阶段压缩（MR 引擎）")]),s._v(" "),t("p",[s._v("开启 map 输出阶段压缩可以减少 job 中 map 和 Reduce task 间数据传输量。具体配置如下：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("开启hive 中间传输数据压缩功能")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("hive.exec.compress.intermediate")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("开启mapreduce 中map 输出压缩功能")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mapreduce.map.output.compress")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("设置mapreduce 中map 输出数据的压缩方式")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mapreduce.map.output.compress.codec")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" org.apache.hadoop.io.compress.SnappyCodec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"开启-reduce-输出阶段压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启-reduce-输出阶段压缩"}},[s._v("#")]),s._v(" 开启 Reduce 输出阶段压缩")]),s._v(" "),t("p",[s._v("当 Hive 将 输 出 写 入 到 表 中 时 ， 输 出 内 容 同 样 可 以 进 行 压 缩 。 属 性hive.exec.compress.output 控制着这个功能。用户可能需要保持默认设置文件中的默认值false，这样默认的输出就是非压缩的纯文本文件了。用户可以通过在查询语句或执行脚本中设置这个值为true，来开启输出结果压缩功能。")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("开启hive 最终输出数据压缩功能")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("hive.exec.compress.output")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("开启mapreduce 最终输出数据压缩")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mapreduce.output.fileoutputformat.compress")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("设置mapreduce 最终数据输出压缩方式")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" mapreduce.output.fileoutputformat.compress.codec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" org.apache.hadoop.io.compress.SnappyCodec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("设置mapreduce 最终数据输出压缩为块压缩")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mapreduce.output.fileoutputformat.compress.type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("BLOCK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("测试一下输出结果是否是压缩文件")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("insert overwrite "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" directory "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./distribute-result'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from emp distribute by deptno "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" by empno desc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"hive的文件存储格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hive的文件存储格式"}},[s._v("#")]),s._v(" Hive的文件存储格式")]),s._v(" "),t("p",[s._v("Hive 支持的存储数据的格式主要有：TEXTFILE 、SEQUENCEFILE、ORC、PARQUET。")]),s._v(" "),t("h3",{attrs:{id:"列式存储和行式存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列式存储和行式存储"}},[s._v("#")]),s._v(" 列式存储和行式存储")]),s._v(" "),t("p",[t("img",{attrs:{src:"C:%5CUsers%5Crsw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211101175247546.png",alt:"列式存储和行式存储"}})]),s._v(" "),t("p",[s._v("如图所示左边为逻辑表，右边第一个为行式存储，第二个为列式存储。")]),s._v(" "),t("p",[t("strong",[s._v("行存储的特点")])]),s._v(" "),t("p",[s._v("查询满足条件的一整行数据的时候，列存储则需要去每个聚集的字段找到对应的每个列的值，行存储只需要找到其中一个值，其余的值都在相邻地方，所以此时行存储查询的速度更快。")]),s._v(" "),t("p",[s._v("列存储的特点")]),s._v(" "),t("p",[s._v("因为每个字段的数据聚集存储，在查询只需要少数几个字段的时候，能大大减少读取的数据量；每个字段的数据类型一定是相同的，列式存储可以针对性的设计更好的设计压缩算法。")]),s._v(" "),t("p",[s._v("TEXTFILE 和 SEQUENCEFILE 的存储格式都是基于行存储的；")]),s._v(" "),t("p",[s._v("ORC 和PARQUET 是基于列式存储的。")]),s._v(" "),t("h3",{attrs:{id:"textfile-格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#textfile-格式"}},[s._v("#")]),s._v(" TextFile 格式")]),s._v(" "),t("p",[s._v("默认格式，数据不做压缩，磁盘开销大，数据解析开销大。可结合 Gzip、Bzip2 使用，但使用Gzip 这种方式，hive 不会对数据进行切分，从而无法对数据进行并行操作。")]),s._v(" "),t("h3",{attrs:{id:"orc-格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#orc-格式"}},[s._v("#")]),s._v(" Orc 格式")]),s._v(" "),t("p",[s._v("Orc (Optimized Row Columnar)是Hive 0.11 版里引入的新的存储格式。")]),s._v(" "),t("h3",{attrs:{id:"parquet-格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parquet-格式"}},[s._v("#")]),s._v(" Parquet 格式")]),s._v(" "),t("p",[s._v("Parquet 文件是以二进制方式存储的，所以是不可以直接读取的，文件中包括该文件的数据和元数据，因此"),t("strong",[s._v("Parquet 格式文件是自解析的")]),s._v("。")]),s._v(" "),t("p",[s._v("在实际的项目开发当中，hive 表的数据存储格式一般选择：orc 或 parquet。压缩方式一般选择snappy，lzo。")])])}),[],!1,null,null,null);t.default=e.exports}}]);